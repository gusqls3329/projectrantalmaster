<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team5.projrental.board.BoardMapper">
    <insert id="insBoard" useGeneratedKeys="true" keyProperty="iboard" keyColumn="iboard">
        INSERT INTO board
        SET title = #{title}
        , contents = #{contents}
        , view = #{view}
    </insert>

    <insert id="insBoardPics" useGeneratedKeys="true" keyProperty="ipics">
        INSERT INTO board_pic
        SET
        <foreach collection="pics" item="pic" open="(" close=")" separator=",">
            stored_pic = #{storedPic}
        </foreach>
    </insert>



    <select id="selBoardList">
        SELECT A.nick, A.stored_pic AS userPic, B.title, B.iboard, B.view
        , B.created_at AS createdAt
        , if(C.iuser > 0, 1, 0) AS isLiked, SQ.cnt AS boardLikeCnt
        , B.status
        FROM user A
        JOIN board B
        ON A.iuser = B.iuser

        left JOIN (SELECT iuser, iboard, count(iboard) as cnt
                    from board_like
                    group by iboard) SQ
        on B.iboard = SQ.iboard

        LEFT JOIN board_like C
        ON B.iboard = C.iboard
        WHERE B.status = #{status}
        <choose>
            <when test="type == 1">
                <if test="search != null and search != ''">
                    AND B.title LIKE CONCAT('%', #{search}, '%')
                </if>
            </when>
            <when test="type == 2">
                <if test="search != null and search != ''">
                    AND (B.title LIKE CONCAT('%', #{search}, '%')
                    OR B.contents LIKE CONCAT('%', #{search}, '%'))
                </if>
            </when>
            <when test="type == 3">
                <if test="search != null and search != ''">
                    AND A.nick LIKE CONCAT('%', #{search}, '%')
                </if>
            </when>
        </choose>
        <choose>
            <when test="sort == 0">
                GROUP BY B.iboard
                ORDER BY B.iboard DESC
            </when>
            <when test="sort == 1">
                GROUP BY B.iboard
                order by SQ.cnt desc, B.iboard desc
            </when>
            <when test="sort == 2">
                GROUP BY B.iboard
                ORDER BY B.view DESC
            </when>
        </choose>
        LIMIT #{startIdx}, #{rowCount}
    </select>

    <select id="selBoard">
        SELECT A.iuser, A.nick, A.stored_pic AS userPic, B.iboard
        , B.title, B.contents, B.view
        , B.created_at AS createdAt, if(C.iuser > 0, 1, 0) AS isLiked
        , C.cnt AS boardLikeCount, B.status
        FROM user A
        JOIN board B
        ON A.iuser = B.iuser

        LEFT JOIN (select iuser, iboard, count(iboard) As cnt
                from board_like
                where iboard = #{iboard}) C
        ON B.iboard = C.iboard
        WHERE B.iboard = #{iboard} and B.status = #{status}
    </select>

    <!-- 특정 게시글의 사진들 -->
    <select id="selBoardPicList">
        SELECT stored_pic AS boardPic, ipics
        FROM board_pic
        WHERE iboard = #{iboard}
    </select>

    <!-- 조회수 -->
    <update id="viewCount" parameterType="int">
        UPDATE board
        SET view = view + 1
        WHERE iboard = #{iboard};
    </update>

    <!-- 게시글 수정 -->
    <update id="putBoard">
        UPDATE board
        SET title = #{title}
        , content = #{content}
        WHERE iboard = #{iboard}
    </update>

    <!-- 게시글의 사진 수정 -->
    <update id="putBoardPic">
        UPDATE board_pic
        SET
        <foreach collection="pic" item="pic" open="(" close=")" separator=",">
            stored_pic = #{storedPic}
        </foreach>
        WHERE iboard = #{iboard}
    </update>

    <!-- 게시글 삭제(숨김) -->
    <update id="delBoard">
        UPDATE board
        SET status = #{deleteStatus}
        WHERE iboard = #{iboard} and iuser = #{iuser}
        and status = #{activatedStatus}
    </update>

    <insert id="insLike">
        INSERT INTO board_like
        SET iboard = #{iboard}
        , iuser = #{loginIuser}
        , created_at = #{createdAt}
    </insert>

    <delete id="delLike">
        DELETE FROM board_like
        WHERE iboard = #{iboard}
        and iuser = #{loginIuser}
    </delete>

    <select id="selBoardCount">
        select count(iboard) AS totalBoardCount
        from board
        where status = #{status};
    </select>

    <delete id="delBoardPics">
        DELETE FROM board_pic
        WHERE iboard = #{iboard} and ipics = #{intIpics}
    </delete>
</mapper>