{"version":3,"file":"static/js/989.46d6dc45.chunk.js","mappings":"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","sources":["api/free/free_api.js","components/sideBarStyle.js","components/SideBar.js","pages/free/FreePage.js","styles/CommonStyles.js","styles/free/FreePageStyle.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport { jwtAxios } from \"../../util/jwtUtil\";\r\n\r\n// FreePage 전체 게시글 호출\r\nexport const getFreeList = async ({\r\n  page,\r\n  search,\r\n  type,\r\n  sort,\r\n  setFreeList,\r\n  setFreeLength,\r\n}) => {\r\n  try {\r\n    let url = `${SERVER_URL}/api/board?page=${page}`;\r\n    if (search) {\r\n      url += `&search=${search}`;\r\n    }\r\n    if (type) {\r\n      url += `&type=${type}`;\r\n    }\r\n    if (sort) {\r\n      url += `&sort=${sort}`;\r\n    }\r\n\r\n    const res = await jwtAxios.get(url);\r\n    setFreeList([...res.data.boardList]);\r\n    setFreeLength(res.data.totalBoardCount);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 게시글 DetailsPage\r\nexport const getFreeData = async iboard => {\r\n  try {\r\n    const url = `${SERVER_URL}/api/board/${iboard}`;\r\n\r\n    const res = await axios.get(url);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 좋아요\r\nexport const getLike = async iboard => {\r\n  try {\r\n    const url = `${SERVER_URL}/api/board/like/${iboard}`;\r\n\r\n    const res = await jwtAxios.get(url);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 게시글 등록\r\nexport const postFreeData = async ({ obj }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n\r\n    const url = `${SERVER_URL}/api/board`;\r\n    const res = await jwtAxios.post(url, obj, header);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 게시글 수정\r\nexport const putFreeData = async ({ obj }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n\r\n    const url = `${SERVER_URL}/api/board`;\r\n    const res = await jwtAxios.put(url, obj, header);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n// 게시글 삭제\r\nexport const deleteFreeData = async iboard => {\r\n  try {\r\n    const url = `${SERVER_URL}/api/board/${iboard}`;\r\n\r\n    const res = await jwtAxios.delete(url);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Common } from \"../styles/CommonStyles\";\r\n\r\nexport const Wrap = styled.div`\r\n  z-index: 9999999;\r\n  position: fixed;\r\n  top: 300px;\r\n  right: 50px;\r\n`;\r\n\r\nexport const SideBarWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 70px;\r\n  height: 500px;\r\n  background-color: #eeeef1;\r\n  border-radius: 30px;\r\n`;\r\n\r\nexport const ButtonWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  gap: 40px;\r\n  padding: 10px;\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    p {\r\n      padding-top: 3px;\r\n      font-size: 1.4rem;\r\n      color: ${Common.color.p300};\r\n    }\r\n  }\r\n`;\r\nexport const Write = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  background: url(\"/images/main/plus.svg\");\r\n\r\n  background-repeat: no-repeat;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nexport const Chat = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  background: url(\"/images/main/chat.svg\") center;\r\n\r\n  background-repeat: no-repeat;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const FreeBoard = styled.button`\r\n  width: 25px;\r\n  height: 25px;\r\n  background: url(\"/images/main/board.svg\") center;\r\n  background-repeat: no-repeat;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nexport const Profile = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  background: url(\"/images/main/profile.svg\");\r\n\r\n  background-repeat: no-repeat;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nexport const Call = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  background: url(\"/images/main/phone.svg\");\r\n\r\n  background-repeat: no-repeat;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  ButtonWrap,\r\n  Call,\r\n  Chat,\r\n  FreeBoard,\r\n  Like,\r\n  Profile,\r\n  SideBarWrap,\r\n  Wrap,\r\n  Write,\r\n} from \"./sideBarStyle\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SideBar = ({ setSelectedItem, setActiveBtn }) => {\r\n  const handleLinkClick = subItem => {\r\n    if (setSelectedItem && setActiveBtn) {\r\n      setSelectedItem(subItem);\r\n      setActiveBtn(subItem);\r\n    }\r\n    sessionStorage.setItem(\"selectedItem\", subItem);\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n      <SideBarWrap>\r\n        <ButtonWrap>\r\n          <Link to=\"/write\">\r\n            <div>\r\n              <Write></Write>\r\n              <p>등록</p>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/\">\r\n            <div>\r\n              <Chat></Chat>\r\n              <p>채팅</p>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/free\">\r\n            <div>\r\n              <FreeBoard></FreeBoard>\r\n              <p>게시판</p>\r\n            </div>\r\n          </Link>\r\n          <Link\r\n            to=\"/my\"\r\n            onClick={() => {\r\n              handleLinkClick(\"대여중\");\r\n            }}\r\n          >\r\n            <div>\r\n              <Profile></Profile>\r\n              <p>MY</p>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/customer\">\r\n            <div>\r\n              <Call></Call>\r\n              <p>고객센터</p>\r\n            </div>\r\n          </Link>\r\n        </ButtonWrap>\r\n      </SideBarWrap>\r\n    </Wrap>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport {\r\n  BtSection,\r\n  FreeHeader,\r\n  FreeMain,\r\n  FreePageStyle,\r\n  FreeSearchForm,\r\n  PaginationBlue,\r\n  SearchSection,\r\n  SortWrap,\r\n} from \"../../styles/free/FreePageStyle\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getFreeList } from \"../../api/free/free_api\";\r\nimport { SideBar } from \"../../components/SideBar\";\r\n\r\n// search 카테고리\r\nconst searchCate = [\r\n  {\r\n    id: 1,\r\n    title: \"제목\",\r\n  },\r\n  // {\r\n  //   id: 2,\r\n  //   title: \"내용\",\r\n  // },\r\n  {\r\n    id: 2,\r\n    title: \"제목+내용\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"닉네임\",\r\n  },\r\n];\r\n\r\n// 더미데이터\r\nconst freeData = [\r\n  {\r\n    id: 1,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"650\",\r\n    look: \"650\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"600\",\r\n    look: \"600\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"350\",\r\n    look: \"350\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"250\",\r\n    look: \"250\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"150\",\r\n    look: \"150\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"120\",\r\n    look: \"120\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"50\",\r\n    look: \"50\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 8,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"8\",\r\n    look: \"8\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 9,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"9\",\r\n    look: \"9\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 10,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"10\",\r\n    look: \"10\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 11,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"11\",\r\n    look: \"11\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 12,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"12\",\r\n    look: \"12\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 13,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"13\",\r\n    look: \"13\",\r\n    date: \"2024.02.20\",\r\n  },\r\n  {\r\n    id: 14,\r\n    title: \"하..바보준*님 거래 잘 좀 합시다!!!!!!!!!!!!!!\",\r\n    nick: \"콩이\",\r\n    like: \"14\",\r\n    look: \"14\",\r\n    date: \"2024.02.20\",\r\n  },\r\n];\r\n\r\nconst FreePage = () => {\r\n  // 데이터 연동\r\n  const [type, setType] = useState(1);\r\n  const [search, setSearch] = useState(null);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const [sort, setSort] = useState(null);\r\n\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [freeList, setFreeList] = useState([]);\r\n  const [freeLength, setFreeLength] = useState([]);\r\n\r\n  const freeListData = async () => {\r\n    await getFreeList({ page, search, type, sort, setFreeList, setFreeLength });\r\n  };\r\n  useEffect(() => {\r\n    freeListData();\r\n  }, [page, search, type, sort]);\r\n\r\n  // table 헤더\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      Header: \"제목\",\r\n      accessor: \"title\",\r\n      width: '45%',\r\n    },\r\n    {\r\n      Header: \"닉네임\",\r\n      accessor: \"nick\",\r\n      width: '10%',\r\n    },\r\n    {\r\n      Header: \"좋아요\",\r\n      accessor: \"boardLikeCnt\",\r\n      width: '10%',\r\n    },\r\n    {\r\n      Header: \"조회수\",\r\n      accessor: \"view\",\r\n      width: '10%',\r\n    },\r\n    {\r\n      Header: \"업로드 날짜\",\r\n      accessor: \"createdAt\",\r\n      width: '25%',\r\n    },\r\n  ]);\r\n  const headerKey = columns.map(header => header.accessor);\r\n\r\n  // 페이지네이션\r\n  const handlePageChange = _tempPage => {\r\n    setPage(_tempPage);\r\n  };\r\n\r\n  // 페이지 이동\r\n  const navigate = useNavigate();\r\n  const moveToRegister = () => {\r\n    navigate(`/free/register`);\r\n  };\r\n  const moveToDetail = async _item => {\r\n    const url = `/free/details?iboard=${_item.iboard}`;\r\n    navigate(url);\r\n  };\r\n\r\n  console.log(search, type, sort);\r\n  return (\r\n    <Layout>\r\n      <SideBar />\r\n      <FreePageStyle>\r\n        <FreeHeader>\r\n          <p>자유게시판</p>\r\n          <SearchSection>\r\n            <select onChange={e => setType(e.target.value)}>\r\n              {searchCate.map(item => {\r\n                return (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.title}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <FreeSearchForm>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"검색어를 입력하세요\"\r\n                value={inputValue}\r\n                onChange={e => setInputValue(e.target.value)}\r\n                onKeyPress={e => {\r\n                  if (e.key === \"Enter\") {\r\n                    e.preventDefault();\r\n                    setSearch(inputValue);\r\n                  }\r\n                }}\r\n              ></input>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setSearch(inputValue)}\r\n              ></button>\r\n            </FreeSearchForm>\r\n          </SearchSection>\r\n        </FreeHeader>\r\n        <FreeMain>\r\n          <SortWrap>\r\n            <button\r\n              onClick={() => setSort(0)}\r\n              style={{\r\n                fontWeight: sort === 0 ? \"bold\" : \"normal\",\r\n                color: sort === 0 ? \"#2c39b5\" : \"\",\r\n              }}\r\n            >\r\n              최신순\r\n            </button>\r\n            <img src=\"/images/main/line.svg\" />\r\n            <button\r\n              onClick={() => setSort(1)}\r\n              style={{ fontWeight: sort === 1 ? \"bold\" : \"normal\",\r\n              color: sort === 1 ? \"#2c39b5\" : \"\", }}\r\n            >\r\n              좋아요순\r\n            </button>\r\n            <img src=\"/images/main/line.svg\" />\r\n            <button\r\n              onClick={() => setSort(2)}\r\n              style={{ fontWeight: sort === 2 ? \"bold\" : \"normal\",\r\n              color: sort === 2 ? \"#2c39b5\" : \"\", }}\r\n            >\r\n              조회순\r\n            </button>\r\n          </SortWrap>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {columns.map(header => (\r\n                  <th key={header.accessor} style={{ width: header.width }}>{header.Header}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {freeList.map((item, index) => (\r\n                <tr key={index} onClick={() => moveToDetail(item)}>\r\n                  {/* headerKey를 순회하면서 key를 가져옴 */}\r\n                  {headerKey.map(key => (\r\n                    <td key={key + index}>\r\n                      {item[key]} {/* key로 객체의 값을 출력 */}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <BtSection>\r\n            <button onClick={moveToRegister}>글쓰기</button>\r\n          </BtSection>\r\n          <div style={{ textAlign: \"center\", margin: \"20px 0\" }}>\r\n            <PaginationBlue\r\n              current={page}\r\n              onChange={handlePageChange}\r\n              total={freeLength}\r\n              pageSize={12}\r\n            />\r\n          </div>\r\n        </FreeMain>\r\n      </FreePageStyle>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FreePage;\r\n","export const Common = {\r\n  // 숫자가 높을수록 밝은 색\r\n  color: {\r\n    primary: \"#2C39B5\",\r\n    p100: \"#000000\",\r\n    p200: \"#4B4B4B\",\r\n    p300: \"#777777\",\r\n    p400: \"#E4E7FF\",\r\n    p500: \"#F2F2FF\",\r\n    p600: \"#FFFFFF\",\r\n  },\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Pagination } from \"antd\";\r\n\r\nexport const FreePageStyle = styled.div`\r\n  width: 1260px;\r\n  margin: 0 auto;\r\n`;\r\nexport const FreeHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #2c39b5;\r\n  padding-bottom: 17px;\r\n  p {\r\n    color: #000;\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const SearchSection = styled.div`\r\n  display: flex;\r\n  width: 330px;\r\n  height: 35px;\r\n  border: 1px solid #bebebe;\r\n  select {\r\n    width: 100px;\r\n    border: none;\r\n    border-right: 1px solid #bebebe;\r\n  }\r\n`;\r\nexport const FreeSearchForm = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 230px;\r\n  height: 35px;\r\n  padding: 0 10px;\r\n  /* border: 1px solid #BEBEBE; */\r\n  input {\r\n    border: none;\r\n    width: 180px;\r\n    height: 30px;\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n  }\r\n  button {\r\n    width: 16px;\r\n    height: 16px;\r\n    background-image: url(\"/images/free/bt_search.svg\");\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const FreeMain = styled.div`\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  th {\r\n    height: 50px;\r\n    border-bottom: 1px solid #bebebe;\r\n    text-align: center;\r\n    background: #e4e7ff;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n  }\r\n  td {\r\n    height: 60px;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #bebebe;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    background: #fff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const SortWrap = styled.div`\r\n  margin-top: 25px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 10px;\r\n  button {\r\n    border: none;\r\n    background: transparent;\r\n    font-size: 15px;\r\n    color: #777;\r\n    cursor: pointer;\r\n  }\r\n  img {\r\n    width: 2px;\r\n    height: 15px;\r\n  }\r\n`;\r\n\r\nexport const BtSection = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n  button {\r\n    width: 150px;\r\n    height: 40px;\r\n    background: #2c39b5;\r\n    border: none;\r\n\r\n    color: #fff;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const PaginationBlue = styled(Pagination)`\r\n  .ant-pagination-item-active {\r\n    border-color: #2c39b5;\r\n    background-color: #2c39b5;\r\n  }\r\n  .ant-pagination-item-active a {\r\n    color: #fff;\r\n  }\r\n  .ant-pagination-item-active:hover {\r\n    border-color: #2c39b5;\r\n    background-color: #2c39b5;\r\n  }\r\n  .ant-pagination-item-active a:hover {\r\n    color: #fff;\r\n  }\r\n  .ant-pagination-options {\r\n    display: none;\r\n  }\r\n`;\r\n"],"names":["getFreeList","async","page","search","type","sort","setFreeList","setFreeLength","_ref","url","concat","SERVER_URL","res","jwtAxios","get","data","boardList","totalBoardCount","error","console","log","getFreeData","iboard","axios","getLike","postFreeData","obj","_ref2","header","headers","post","putFreeData","_ref3","put","deleteFreeData","delete","Wrap","styled","div","_templateObject","_taggedTemplateLiteral","SideBarWrap","_templateObject2","ButtonWrap","_templateObject3","Common","color","p300","Write","button","_templateObject4","Chat","_templateObject5","FreeBoard","_templateObject6","Profile","_templateObject7","Call","_templateObject8","SideBar","setSelectedItem","setActiveBtn","_jsx","children","_jsxs","Link","to","onClick","subItem","sessionStorage","setItem","searchCate","id","title","FreePage","setType","useState","setSearch","inputValue","setInputValue","setSort","setPage","freeList","freeLength","useEffect","freeListData","columns","React","Header","accessor","width","headerKey","map","navigate","useNavigate","Layout","FreePageStyle","FreeHeader","SearchSection","onChange","e","target","value","item","FreeSearchForm","placeholder","onKeyPress","key","preventDefault","FreeMain","SortWrap","style","fontWeight","src","index","_item","moveToDetail","BtSection","moveToRegister","textAlign","margin","PaginationBlue","current","_tempPage","total","pageSize","primary","p100","p200","p400","p500","p600","Pagination"],"sourceRoot":""}