{"version":3,"file":"static/js/288.733427d2.chunk.js","mappings":"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","sources":["api/join/join_api.js","components/address/Address.js","components/joinpopup/JoinPopUp.js","components/joinpopup/VerificationModal.js","components/joinpopup/VerificationOk.js","pages/join/JoinPage.js","styles/join/JoinFirstPageStyle.js","styles/join/JoinPageStyle.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\n// 회원가입\r\n\r\nexport const joinPost = async ({obj}) => {\r\n  try {\r\n    const header = {headers: {\"Content-Type\": \"multipart/form-data\"}};\r\n    const res = await axios.post(`${SERVER_URL}/api/user/signup`, obj, header);\r\n    const resStatus = res.status.toString();\r\n    if (resStatus.charAt(0) === \"2\") {\r\n      console.log({ ...res.data });\r\n      // postSuccess(res.data);\r\n      return res.data;\r\n\r\n    } else {\r\n      alert(\"데이터 전송에 실패했습니다.\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n    // postFail();\r\n\r\n  }\r\n};\r\n\r\n// 중복확인(닉네임)\r\nexport const nickOverlapPost = async (\r\n  obj,\r\n  nickPostSuccess,\r\n  nickPostFail,\r\n) => {\r\n  try {\r\n    const res = await axios.post(`${SERVER_URL}/api/user/check`, obj);\r\n    const resStatus = res.status.toString();\r\n    if (resStatus.charAt(0) === \"2\") {\r\n      console.log({ ...res.data });\r\n      nickPostSuccess(res.data);\r\n    // } else if (res.status == 427) {\r\n    //   nickPostFail();\r\n    } else {\r\n      alert(\"데이터 전송에 실패했습니다.\");\r\n    }\r\n  } catch (error) {\r\n    nickPostFail();\r\n  }\r\n};\r\n\r\n// 중복확인(아이디)\r\nexport const idOverlapPost = async (\r\n  obj,\r\n  idPostSuccess,\r\n  idPostFail,\r\n) => {\r\n  try {\r\n    const res = await axios.post(`${SERVER_URL}/api/user/check`, obj);\r\n    const resStatus = res.status.toString();\r\n    if (resStatus.charAt(0) === \"2\") {\r\n      console.log({ ...res.data });\r\n      idPostSuccess(res.data);\r\n    // } else if (res.status == 432) {\r\n    //   idPostFail();\r\n    } else {\r\n      alert(\"데이터 전송에 실패했습니다.\");\r\n    }\r\n  } catch (error) {\r\n    idPostFail();\r\n  }\r\n};\r\n\r\n// 본인인증 요청\r\nexport const verificationPost = async (obj) => {\r\n  try {\r\n    const res = await axios.post(`${SERVER_URL}/api/user/verification`, obj);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(\"error\");\r\n  }\r\n}\r\n\r\nexport const verificationGet = async (id) => {\r\n  try {\r\n    if (!id) {\r\n      console.log(\"id가 정의되지 않았습니다.\");\r\n      return; // id가 정의되지 않은 경우 함수 종료\r\n    }\r\n    const res = await axios.get(`${SERVER_URL}/api/user/verification?id=${id}`);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(\"error\");\r\n  }\r\n}","// 주소 검색 모달창\r\nexport const Modal = ({ children, handleClose }) => {\r\n    return (\r\n      <div style={modalStyle}>\r\n        <div style={contentStyle}>\r\n          <span style={closeButtonStyle} onClick={handleClose}>\r\n            &times;\r\n          </span>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const modalStyle = {\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    backgroundColor: \"#fefefe\",\r\n    padding: \"30px\",\r\n    width: \"600px\",\r\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n  };\r\n  const contentStyle = {\r\n    position: \"relative\",\r\n  };\r\n  const closeButtonStyle = {\r\n    position: \"absolute\",\r\n    top: \"-28px\",\r\n    right: \"-27px\",\r\n    fontSize: \"25px\",\r\n    cursor: \"pointer\",\r\n    zIndex: \"1\",\r\n  };","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nexport const ModalBackground = styled.div`\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground: rgba(0, 0, 0, 0.5);\r\nz-index: 999;\r\n`\r\n\r\nconst JoinPopUp = ({ txt, onConfirm }) => {\r\n  const JoinPopUp = styled.div`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 1000;\r\n\r\n    width: 300px;\r\n    height: 180px;\r\n    display: flex;\r\n\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 30px;\r\n\r\n    border-radius: 10px;\r\n    border: 1px solid #2c39b5;\r\n    background: #fff;\r\n    b {\r\n      color: #000;\r\n      text-align: center;\r\n      font-size: 20px;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      line-height: normal;\r\n    }\r\n    button {\r\n      width: 100px;\r\n      height: 50px;\r\n      border-radius: 5px;\r\n      border: none;\r\n      background: #2c39b5;\r\n      cursor: pointer;\r\n      color: #fff;\r\n      font-size: 20px;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      line-height: normal;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <JoinPopUp>\r\n      <b>{txt}</b>\r\n      <button onClick={onConfirm}>확인</button>\r\n    </JoinPopUp>\r\n  );\r\n};\r\n\r\nexport default JoinPopUp;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { IdBox, LoginBox, Logo, LogoZone } from \"../../styles/login/LoginPageStyle\";\r\nimport { BtSection, CancelBt, SaveBt, VerifiBt } from \"../../styles/join/JoinPageStyle\";\r\nimport { verificationGet, verificationPost } from \"../../api/join/join_api\";\r\n\r\nconst VerificationStyle = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 1000;\r\n\r\n  width: 500px;\r\n  height: 560px;\r\n  background: #fff;\r\n  padding-top: 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst VerificationModal = ({ closeModal, onConfirm, setVerificationId, verificationId }) => {\r\n  const [resultOk, setResultOk] = useState(false)\r\n  const [userData, setUserData] = useState({\r\n    userName: \"\",\r\n    userPhone: \"\",\r\n    userBirthday: \"\",\r\n  });\r\n\r\n  const handleChange = (fieldName, value) => {\r\n    let sanitizedValue;\r\n  \r\n    if (fieldName === \"userPhone\" || fieldName === \"userBirthday\") {\r\n      const numRegex = /^[0-9]*$/;\r\n      if (!numRegex.test(value)) {\r\n        return;\r\n      }\r\n      sanitizedValue = value;\r\n    } else {\r\n      const regex = /^[가-힣]*[ㄱ-ㅎㅏ-ㅣ]*$/;\r\n      if (!regex.test(value)) {\r\n        return;\r\n      }\r\n      sanitizedValue = value;\r\n    }\r\n  \r\n    setUserData(prevState => ({\r\n      ...prevState,\r\n      [fieldName]: sanitizedValue,\r\n    }));\r\n  };\r\n\r\n  const handleVerifiConfirm = async (userData) => {\r\n    if (!userData.userName || !userData.userPhone || !userData.userBirthday) {\r\n      return;\r\n    }\r\n    try {\r\n      let result;\r\n      result = await verificationPost(userData);\r\n      setVerificationId(result.id);\r\n      setResultOk(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n      // 에러 발생 시 본인 확인 완료 문구 표시\r\n      setResultOk(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VerificationStyle>\r\n      <LogoZone>\r\n        <Logo src=\"/images/logo.svg\" style={{ marginBottom: \"20px\" }} />\r\n      </LogoZone>\r\n      <LoginBox height={\"340px\"} mgbtm={\"50px\"}>\r\n        {resultOk ? (\r\n          <p>\r\n          본인인증 완료해주세요. \r\n          </p>\r\n        ) : (\r\n          <p>\r\n          본인인증을 위해 <br />\r\n          정보 입력을 해주세요.\r\n          </p>\r\n        )}\r\n        <IdBox\r\n          type=\"text\"\r\n          placeholder=\"이름 예) 홍길동\"\r\n          value={userData.userName}\r\n          onChange={(e) => handleChange(\"userName\", e.target.value)}\r\n        />\r\n        <IdBox\r\n          type=\"text\"\r\n          placeholder=\"휴대폰 번호 예) 01000000000\"\r\n          value={userData.userPhone}\r\n          onChange={(e) => handleChange(\"userPhone\", e.target.value)}\r\n        />\r\n        <IdBox\r\n          type=\"number\"\r\n          placeholder=\"생일 예) 20240301\"\r\n          value={userData.userBirthday}\r\n          onChange={(e) => handleChange(\"userBirthday\", e.target.value)}\r\n        />\r\n\r\n        <BtSection width={\"380px\"}>\r\n          {resultOk ? (\r\n              <VerifiBt onClick={()=> onConfirm(verificationId)}>본인 확인 완료</VerifiBt>\r\n            ) : (\r\n              <>\r\n                <CancelBt onClick={closeModal}>닫기</CancelBt>\r\n                <SaveBt onClick={() => handleVerifiConfirm(userData)}>\r\n                  확인\r\n                </SaveBt>\r\n              </>\r\n            )}\r\n        </BtSection>\r\n      </LoginBox>\r\n    </VerificationStyle>\r\n  );\r\n};\r\n\r\nexport default VerificationModal;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { IdBox, LoginBox, Logo, LogoZone } from \"../../styles/login/LoginPageStyle\";\r\nimport { BtSection, CancelBt, SaveBt, VerifiBt } from \"../../styles/join/JoinPageStyle\";\r\nimport { verificationGet, verificationPost } from \"../../api/join/join_api\";\r\n\r\nconst VerificationStyle = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 1000;\r\n\r\n  width: 500px;\r\n  height: 560px;\r\n  background: #fff;\r\n  padding-top: 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst VerificationOk = ({ closeModal, verifiData }) => {\r\n    \r\n  return (\r\n    <VerificationStyle>\r\n      <LogoZone>\r\n        <Logo src=\"/images/logo.svg\" style={{ marginBottom: \"20px\" }} />\r\n      </LogoZone>\r\n      <LoginBox height={\"340px\"} mgbtm={\"50px\"}>\r\n          <p>\r\n          본인인증을 완료하였습니다.\r\n          </p>\r\n        <IdBox\r\n          type=\"text\"\r\n          placeholder=\"이름 예) 홍길동\"\r\n          value={verifiData.name}\r\n        />\r\n        <IdBox\r\n          type=\"text\"\r\n          placeholder=\"휴대폰 번호 예) 01000000000\"\r\n          value={verifiData.phone}\r\n        />\r\n        <IdBox\r\n          type=\"number\"\r\n          placeholder=\"생일 예) 20240301\"\r\n          value={verifiData.birthday}\r\n        />\r\n\r\n        <BtSection width={\"380px\"}>\r\n        <VerifiBt onClick={closeModal}>본인 확인 완료</VerifiBt>\r\n        </BtSection>\r\n      </LoginBox>\r\n    </VerificationStyle>\r\n  );\r\n};\r\n\r\nexport default VerificationOk;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport {\r\n  BtSection,\r\n  CancelBt,\r\n  ConfirmBt,\r\n  ImageInputBt,\r\n  InputValid,\r\n  JoinAddressInput,\r\n  JoinBox,\r\n  JoinElement,\r\n  JoinElementInput,\r\n  JoinElementInputBox,\r\n  JoinElementTxt,\r\n  JoinPageStyle,\r\n  SaveBt,\r\n  ShowPasswordBt,\r\n  ShowPasswordImg,\r\n} from \"../../styles/join/JoinPageStyle\";\r\nimport { JoinHeader } from \"../../styles/join/JoinFirstPageStyle\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Modal } from \"../../components/address/Address\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport JoinPopUp, {\r\n  ModalBackground,\r\n} from \"../../components/joinpopup/JoinPopUp\";\r\nimport {\r\n  idOverlapPost,\r\n  joinPost,\r\n  nickOverlapPost,\r\n  verificationGet,\r\n  verificationPost,\r\n} from \"../../api/join/join_api\";\r\nimport VerificationModal from \"../../components/joinpopup/VerificationModal\";\r\nimport VerificationOk from \"../../components/joinpopup/VerificationOk\";\r\n\r\nconst JoinPage = () => {\r\n  // 중복확인(닉네임)\r\n  const [nickOverlapConfirm, setNickOverlapConfirm] = useState(false);\r\n  const [nickConfirmModal, setNickConfirmModal] = useState(false);\r\n  const [nickFailModal, setNickFailModal] = useState(false);\r\n  const [nickNullModal, setNickNullModal] = useState(false);\r\n\r\n  const NickOverlap = () => {\r\n    const obj = {\r\n      div: 1,\r\n      uid: \"userId123\",\r\n      nick: nickname,\r\n    };\r\n    nickOverlapPost(obj, () => {\r\n      setIsValid(2); \r\n      nickPostSuccess();\r\n    }, nickPostFail);\r\n  };\r\n  const NickOverlapBt = e => {\r\n    e.preventDefault();\r\n    NickOverlap();\r\n  };\r\n  const nickPostSuccess = () => {\r\n    setNickOverlapConfirm(true);\r\n    setNickConfirmModal(true);\r\n  };\r\n  const closeNickConfirmModal = () => {\r\n    setNickConfirmModal(false);\r\n  };\r\n  const nickPostFail = () => {\r\n    setNickFailModal(true);\r\n  };\r\n  const closeNickFailModal = () => {\r\n    setNickFailModal(false);\r\n  };\r\n  const nickNullBt = () => {\r\n    setNickNullModal(true);\r\n  };\r\n  const closeNickNullBt = () => {\r\n    setNickNullModal(false);\r\n  };\r\n\r\n  // 중복확인(아이디)\r\n  const [idOverlapConfirm, setIdOverlapConfirm] = useState(false);\r\n  const [idConfirmModal, setIdConfirmModal] = useState(false);\r\n  const [idFailModal, setIdFailModal] = useState(false);\r\n  const [idNullModal, setIdNullModal] = useState(false);\r\n  \r\n  const IdOverlap = () => {\r\n    const obj = {\r\n      div: 2,\r\n      uid: userId,\r\n      nick: \"nickname\",\r\n    };\r\n    idOverlapPost(obj, () => {\r\n      setIsValid(2);\r\n      idPostSuccess();\r\n    }, idPostFail);\r\n  };\r\n  const IdOverlapBt = e => {\r\n    e.preventDefault();\r\n    IdOverlap();\r\n  };\r\n  const idPostSuccess = () => {\r\n    setIdOverlapConfirm(true);\r\n    setIdConfirmModal(true);\r\n  };\r\n  const closeIdConfirmModal = () => {\r\n    setIdConfirmModal(false);\r\n  };\r\n  const idPostFail = () => {\r\n    setIdFailModal(true);\r\n  };\r\n  const closeIdFailModal = () => {\r\n    setIdFailModal(false);\r\n  };\r\n  const idNullBt = () => {\r\n    setIdNullModal(true);\r\n  };\r\n  const closeIdNullBt = () => {\r\n    setIdNullModal(false);\r\n  };\r\n\r\n\r\n  // 이미지 업로드\r\n  const [uploadImg, setUploadImg] = useState(\r\n    `${process.env.PUBLIC_URL}/images/join/join_img.svg`,\r\n  );\r\n  const [uploadImgFile, setUploadImgFile] = useState(null);\r\n\r\n  const handleChangeFileOne = e => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // 미리보기\r\n      const tempUrl = URL.createObjectURL(file);\r\n      setUploadImg(tempUrl); // 미리보기 끝\r\n      // FB 파일을 보관\r\n      setUploadImgFile(file); // 파일 1개 추가 끝\r\n    }\r\n  };\r\n\r\n  // 비밀번호 보이기/감추기\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showPasswordConfirm, setShowPasswordConfirm] = useState(false);\r\n\r\n  const handleTogglePassword = () => {\r\n    setShowPassword(prev => !prev);\r\n  };\r\n  const handleTogglePasswordConfirm = () => {\r\n    setShowPasswordConfirm(prev => !prev);\r\n  };\r\n\r\n  // 주소 검색 모달창\r\n  const [addrModal, setAddrModal] = useState(false);\r\n\r\n  const handleSelectAddress = data => {\r\n    const selectedAddress = data.address;\r\n    setAddress(selectedAddress);\r\n    setAddrModal(false);\r\n    console.log(address);\r\n  };\r\n  const handleClickButton = () => {\r\n    setAddrModal(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setAddrModal(false);\r\n  };\r\n\r\n  // 양식 검증(yup)\r\n  const phoneRegExp = /^(\\d{3})-(\\d{4})-(\\d{4})$/;\r\n  const validationSchema = yup.object().shape({\r\n    nickname: yup\r\n      .string()\r\n      .max(20, \"20자까지만 입력하세요 \")\r\n      .required(\"닉네임은 필수 입력 사항입니다.\"),\r\n    userId: yup\r\n      .string()\r\n      .min(4, \"4자 이상 입력하세요.\")\r\n      .max(15, \"15자까지만 입력하세요 \")\r\n      .required(\"아이디는 필수 입력 사항입니다.\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"비밀번호는 필수 입력 사항입니다.\")\r\n      .min(8, \"8자 이상 입력하세요.\")\r\n      .max(20, \"20자까지만 입력하세요 \"),\r\n    confirmPassword: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\"), null], \"비밀번호가 일치하지 않습니다.\")\r\n      .required(\"비밀번호 확인은 필수 입력 사항입니다.\"),\r\n    phoneNumber: yup\r\n      .string()\r\n      .matches(phoneRegExp, \"전화번호가 올바르지 않습니다.\")\r\n      .required(\"휴대폰 번호는 필수 입력 사항입니다.\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"이메일 형식이 올바르지 않습니다.\")\r\n      .required(\"이메일은 필수 입력 사항입니다.\")\r\n      .max(30, \"30자까지만 입력하세요 \"),\r\n  });\r\n\r\n  const { register, handleSubmit, formState, watch } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    mode: \"onChange\",\r\n  });\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const nickname = watch(\"nickname\");\r\n  const userId = watch(\"userId\");\r\n  const password = watch(\"password\");\r\n  const phoneNumber = watch(\"phoneNumber\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [restAddress, setRestAddress] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(0);\r\n  const email = watch(\"email\");\r\n\r\n\r\n  const handleChangeAddress = e => {\r\n    setAddress(e.target.value);\r\n  };\r\n  const handleChangeRestAddress = e => {\r\n    setRestAddress(e.target.value);\r\n  };\r\n\r\n  // 본인 인증 버튼\r\n  const [verificationModal, setVerificationModal] = useState(false);\r\n  const [verificationId, setVerificationId] = useState(\"\");\r\n  const [resultOk, setResultOk] = useState(false);\r\n  const [verifiData, setVerifiData] = useState();\r\n  const [verifiResultModal, setVerifiResultModal] = useState(false);\r\n   \r\n  const verifiResultonConfirm = () => {\r\n    setVerifiResultModal(true);\r\n  }\r\n\r\n  const verifiResultClose = () => {\r\n    setVerifiResultModal(false);\r\n  }\r\n\r\n  const verificationConfirm = () => {\r\n    setVerificationModal(true);\r\n  };\r\n  const closeVerificationModal = () => {\r\n    setVerificationModal(false);\r\n  };\r\n\r\n  const onVerifiConfirm = async (id) => {\r\n    try {\r\n      let result;\r\n      result = await verificationGet(id);\r\n      \r\n      if (result) {\r\n        setVerifiData(result);\r\n        setVerificationModal(false);\r\n        setResultOk(true);\r\n      } else {\r\n        console.log(\"Result is empty\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  \r\n  // 데이터 연동(회원가입)\r\n  const handleSubmitJoin = async () => {\r\n    const formData = new FormData();\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          addr: address,\r\n          restAddr: restAddress,\r\n          uid: userId,\r\n          upw: password,\r\n          nick: nickname,\r\n          phone: phoneNumber,\r\n          email: email,\r\n          isValid: isValid,\r\n          iverificationInfo: verificationId,\r\n        }),\r\n      ],\r\n      { type: \"application/json\" },\r\n    );\r\n    formData.append(\"dto\", dto);\r\n\r\n    if (uploadImgFile) {\r\n      console.log(uploadImgFile);\r\n      const response = await fetch(uploadImg);\r\n      const blob = await response.blob();\r\n      const currentDate = new Date();\r\n      const seconds = Math.floor(currentDate.getTime() / 1000);\r\n      const file = new File([blob], `image${seconds}.jpg`, {\r\n        type: \"image/jpeg\",\r\n      });\r\n\r\n      formData.append(\"pic\", file);\r\n    }\r\n    for (const pair of formData.entries()) {\r\n      console.log(pair[0] + \": \" + pair[1]);\r\n    }\r\n\r\n    try {\r\n      joinPost({obj: formData});\r\n      navigate(`/join/step_3?nick=${nickname}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // 취소 & 저장 버튼\r\n  const [catchErr, setCatchErr] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleCancel = () => {\r\n    navigate(`/login`);\r\n  };\r\n\r\n  const handleNotValid = e => {\r\n    setCatchErr(true);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {nickConfirmModal && (\r\n        <>\r\n          <JoinPopUp\r\n            txt=\"사용 가능한 닉네임입니다.\"\r\n            onConfirm={closeNickConfirmModal}\r\n          />\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n      {nickFailModal && (\r\n        <>\r\n          <JoinPopUp\r\n            txt=\"사용할 수 없는 닉네임입니다.\"\r\n            onConfirm={closeNickFailModal}\r\n          />\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n      {nickNullModal && (\r\n        <>\r\n          <JoinPopUp txt=\"닉네임을 입력해주세요.\" onConfirm={closeNickNullBt} />\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n\r\n      {idConfirmModal && (\r\n        <>\r\n          <JoinPopUp\r\n            txt=\"사용 가능한 아이디입니다.\"\r\n            onConfirm={closeIdConfirmModal}\r\n          />\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n      {idFailModal && (\r\n        <>\r\n          <JoinPopUp\r\n            txt=\"사용할 수 없는 아이디입니다.\"\r\n            onConfirm={closeIdFailModal}\r\n          />\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n      {idNullModal && (\r\n        <>\r\n          <JoinPopUp txt=\"4글자 이상 입력해주세요.\" onConfirm={closeIdNullBt} />\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n\r\n      {verificationModal && (\r\n        <>\r\n          <VerificationModal closeModal={closeVerificationModal} \r\n          onConfirm={onVerifiConfirm} \r\n          verificationId={verificationId}\r\n          setVerificationId={setVerificationId}/>\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n\r\n      {verifiResultModal && (\r\n        <>\r\n          <VerificationOk closeModal={verifiResultClose} verifiData={verifiData}/>\r\n          <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n\r\n      {addrModal && (\r\n        <Modal handleClose={handleCloseModal}>\r\n          <DaumPostcode onComplete={handleSelectAddress} autoClose={false} />\r\n        </Modal>\r\n      )}\r\n\r\n      <JoinPageStyle>\r\n        <JoinHeader>\r\n          <p>회원가입</p>\r\n          <img src=\"/images/join/join_step2.svg\" />\r\n        </JoinHeader>\r\n        <JoinBox onSubmit={handleSubmit(handleSubmitJoin)}>\r\n          <JoinElement>\r\n            <JoinElementTxt>\r\n              <p>사진</p>\r\n              <span>*</span>\r\n            </JoinElementTxt>\r\n            <JoinElementInputBox>\r\n              <JoinElementInput>\r\n                <label htmlFor=\"img\">\r\n                  <ImageInputBt\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      document.getElementById(\"img\").click();\r\n                    }}\r\n                  >\r\n                    <img src={uploadImg} alt=\"\" />\r\n                  </ImageInputBt>\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  {...register(\"photo\")}\r\n                  accept=\"image/png, image/gif, image/jpeg\"\r\n                  onClick={() => {\r\n                    document.getElementById(\"img\").click();\r\n                  }}\r\n                  onChange={event => {\r\n                    handleChangeFileOne(event, \"before\");\r\n                  }}\r\n                  id=\"img\"\r\n                  style={{ display: \"none\" }}\r\n                />\r\n              </JoinElementInput>{\" \"}\r\n              {uploadImgFile === null && catchErr ? (\r\n                <InputValid>사진을 선택해주세요.</InputValid>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </JoinElementInputBox>\r\n          </JoinElement>\r\n\r\n          <JoinElement>\r\n            <JoinElementTxt>\r\n              <p>닉네임</p>\r\n              <span>*</span>\r\n            </JoinElementTxt>\r\n            <JoinElementInputBox>\r\n              <JoinElementInput width=\"440px\">\r\n                <input\r\n                  type=\"text\"\r\n                  maxLength={20}\r\n                  placeholder=\"20자 이내\"\r\n                  name=\"nickname\"\r\n                  {...register(\"nickname\")}\r\n                />\r\n                {!nickname ? (\r\n                  <ConfirmBt onClick={nickNullBt} type=\"button\">\r\n                    중복 확인\r\n                  </ConfirmBt>\r\n                ) : (\r\n                  <ConfirmBt onClick={NickOverlapBt} type=\"button\">\r\n                    중복 확인\r\n                  </ConfirmBt>\r\n                )}\r\n              </JoinElementInput>\r\n              {catchErr && formState.errors.nickname && (\r\n                <InputValid>{formState.errors.nickname?.message}</InputValid>\r\n              )}\r\n              {catchErr &&\r\n                !nickOverlapConfirm &&\r\n                !formState.errors.nickname && (\r\n                  <InputValid>닉네임 중복 확인을 해주세요.</InputValid>\r\n                )}\r\n            </JoinElementInputBox>\r\n          </JoinElement>\r\n\r\n          <JoinElement>\r\n            <JoinElementTxt>\r\n              <p>아이디</p>\r\n              <span>*</span>\r\n            </JoinElementTxt>\r\n            <JoinElementInputBox>\r\n              <JoinElementInput width=\"440px\">\r\n                <input\r\n                  type=\"text\"\r\n                  minLength={4}\r\n                  maxLength={15}\r\n                  placeholder=\"4~15자 이내\"\r\n                  name=\"userId\"\r\n                  {...register(\"userId\")}\r\n                />\r\n                {!userId || userId.length < 4 ? (\r\n                  <ConfirmBt onClick={idNullBt} type=\"button\">\r\n                    중복확인\r\n                  </ConfirmBt>\r\n                ) : (\r\n                  <ConfirmBt onClick={IdOverlapBt} type=\"button\">\r\n                    중복 확인\r\n                  </ConfirmBt>\r\n                )}\r\n              </JoinElementInput>\r\n              <InputValid>{formState.errors.userId?.message}</InputValid>\r\n              {catchErr && !idOverlapConfirm && !formState.errors.userId && (\r\n                <InputValid>아이디 중복 확인을 해주세요.</InputValid>\r\n              )}\r\n            </JoinElementInputBox>\r\n          </JoinElement>\r\n\r\n          <JoinElement>\r\n            <JoinElementTxt>\r\n              <p>비밀번호</p>\r\n              <span>*</span>\r\n            </JoinElementTxt>\r\n            <JoinElementInputBox>\r\n              <JoinElementInput>\r\n                <input\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  minLength={8}\r\n                  maxLength={20}\r\n                  placeholder=\"특수문자 포함 8~20자 이내\"\r\n                  name=\"password\"\r\n                  {...register(\"password\")}\r\n                />\r\n                <ShowPasswordBt type=\"button\" onClick={handleTogglePassword}>\r\n                  {showPassword ? (\r\n                    <ShowPasswordImg src=\"/images/join/eye_open.png\" />\r\n                  ) : (\r\n                    <ShowPasswordImg src=\"/images/join/eye_close.png\" />\r\n                  )}\r\n                </ShowPasswordBt>\r\n              </JoinElementInput>\r\n              <InputValid>{formState.errors.password?.message}</InputValid>\r\n            </JoinElementInputBox>\r\n          </JoinElement>\r\n\r\n          <JoinElement>\r\n            <JoinElementTxt>\r\n              <p>비밀번호 확인</p>\r\n              <span>*</span>\r\n            </JoinElementTxt>\r\n            <JoinElementInputBox>\r\n              <JoinElementInput>\r\n                <input\r\n                  type={showPasswordConfirm ? \"text\" : \"password\"}\r\n                  minLength={8}\r\n                  maxLength={20}\r\n                  placeholder=\"비밀번호 확인\"\r\n                  name=\"confirmPassword\"\r\n                  {...register(\"confirmPassword\")}\r\n                />\r\n                <ShowPasswordBt\r\n                  type=\"button\"\r\n                  onClick={handleTogglePasswordConfirm}\r\n                >\r\n                  {showPasswordConfirm ? (\r\n                    <ShowPasswordImg src=\"/images/join/eye_open.png\" />\r\n                  ) : (\r\n                    <ShowPasswordImg src=\"/images/join/eye_close.png\" />\r\n                  )}\r\n                </ShowPasswordBt>\r\n              </JoinElementInput>\r\n              <InputValid>\r\n                {formState.errors.confirmPassword?.message}\r\n              </InputValid>\r\n            </JoinElementInputBox>\r\n          </JoinElement>\r\n\r\n          <JoinElement>\r\n            <JoinElementTxt>\r\n              <p>휴대폰 번호</p>\r\n              <span>*</span>\r\n            </JoinElementTxt>\r\n            <JoinElementInputBox>\r\n              <JoinElementInput width=\"440px\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"예) 010-0000-0000\"\r\n                  name=\"phoneNumber\"\r\n                  {...register(\"phoneNumber\")}\r\n                />\r\n                {resultOk === true ? (\r\n                  <ConfirmBt width={\"130px\"} type=\"button\"\r\n                  onClick={()=> {verifiResultonConfirm()}}>\r\n                    본인 결과 확인\r\n                  </ConfirmBt>\r\n                ) : (\r\n                  <ConfirmBt width={\"130px\"} type=\"button\"\r\n                  onClick={()=> {verificationConfirm()}}>\r\n                     본인 인증 확인\r\n                  </ConfirmBt>\r\n                )}\r\n              </JoinElementInput>\r\n              <InputValid>{formState.errors.phoneNumber?.message}</InputValid>\r\n            </JoinElementInputBox>\r\n          </JoinElement>\r\n\r\n          <JoinElement>\r\n            <JoinElementTxt>\r\n              <p>주소</p>\r\n              <span>*</span>\r\n            </JoinElementTxt>\r\n            <JoinElementInputBox>\r\n              <JoinAddressInput>\r\n                <input\r\n                  type=\"text\"\r\n                  value={address}\r\n                  placeholder=\"주소를 검색해주세요.\"\r\n                  onClick={handleClickButton}\r\n                  readOnly\r\n                  name=\"address\"\r\n                  onChange={handleChangeAddress}\r\n                />\r\n                {catchErr && address === \"\" && (\r\n                  <InputValid>주소를 검색해주세요.</InputValid>\r\n                )}\r\n                <input\r\n                  type=\"text\"\r\n                  value={restAddress}\r\n                  placeholder=\"상세 주소를 입력해주세요.\"\r\n                  name=\"restAddress\"\r\n                  onChange={handleChangeRestAddress}\r\n                />\r\n                {catchErr && restAddress === \"\" && (\r\n                  <InputValid>상세 주소를 입력해주세요.</InputValid>\r\n                )}\r\n              </JoinAddressInput>\r\n            </JoinElementInputBox>\r\n          </JoinElement>\r\n\r\n          <JoinElement>\r\n            <JoinElementTxt>\r\n              <p>이메일</p>\r\n              <span>*</span>\r\n            </JoinElementTxt>\r\n            <JoinElementInputBox>\r\n              <JoinElementInput>\r\n                <input\r\n                  type=\"email\"\r\n                  maxLength={30}\r\n                  placeholder=\"예) a123@naver.com\"\r\n                  name=\"email\"\r\n                  {...register(\"email\")}\r\n                />\r\n              </JoinElementInput>\r\n              {catchErr && formState.errors.email && (\r\n                <InputValid>{formState.errors.email?.message}</InputValid>\r\n              )}\r\n            </JoinElementInputBox>\r\n          </JoinElement>\r\n\r\n          <BtSection mgtop=\"90px\" mgbtm=\"0px\">\r\n            <CancelBt onClick={handleCancel}>취소</CancelBt>\r\n            {formState.isValid &&\r\n            uploadImgFile !== null &&\r\n            address &&\r\n            restAddress &&\r\n            nickOverlapConfirm &&\r\n            idOverlapConfirm ? (\r\n              <SaveBt type=\"submit\">저장</SaveBt>\r\n            ) : (\r\n              <SaveBt onClick={handleNotValid}>저장</SaveBt>\r\n            )}\r\n          </BtSection>\r\n        </JoinBox>\r\n      </JoinPageStyle>\r\n    </Layout>\r\n  );\r\n};\r\nexport default JoinPage;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const JoinFirstPageStyle = styled.div`\r\n  width: 1300px;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  /* background: skyblue; */\r\n`;\r\nexport const JoinHeader = styled.div`\r\n  margin-top: ${props => (props.mgtop ? props.mgtop : \"0px\")};\r\n  text-align: center;\r\n  p {\r\n    color: #000;\r\n    font-size: 23px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n\r\n    margin-bottom: ${props => (props.mgbtm ? props.mgbtm : \"60px\")};\r\n  }\r\n  img {\r\n    width: 550px;\r\n    height: 63px;\r\n    margin-bottom: 70px;\r\n  }\r\n`;\r\nexport const JoinMain = styled.div`\r\n  width: 980px;\r\n  /* text-align: center; */\r\n  margin: 0 auto;\r\n`;\r\nexport const JoinAgreement = styled.div`\r\n  width: 980px;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  border: 1px solid #2c39b5;\r\n  margin: 0 auto;\r\n  h1 {\r\n    color: #777;\r\n    font-size: 22px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n\r\n    text-align: start;\r\n  }\r\n  h2 {\r\n    color: #777;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n\r\n    text-align: start;\r\n  }\r\n`;\r\nexport const RadioBox = styled.div`\r\n  text-align: start;\r\n  padding: 15px 0;\r\n\r\n  color: #777;\r\n  font-size: 22px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  input[type=\"radio\"] {\r\n    width: 17px;\r\n    height: 17px;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n  }\r\n  input[type=\"radio\"] + label {\r\n    margin-right: 25px;\r\n    cursor: pointer;\r\n  }\r\n  input[type=\"radio\"]:checked + label {\r\n    color: #000;\r\n  }\r\n`;\r\nexport const ConfirmBt = styled.button`\r\n  width: 200px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  background: #2c39b5;\r\n  margin: 100px auto;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  color: #fff;\r\n  font-size: 22px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const JoinPageStyle = styled.div`\r\n  width: 1300px;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  /* background: skyblue; */\r\n`;\r\nexport const JoinBox = styled.form`\r\n  width: 980px;\r\n  /* height: 700px; */\r\n  border-radius: 10px;\r\n  border: 1px solid #2c39b5;\r\n  margin: ${props => props.margin ? props.margin : \"0 auto 100px\"};\r\n  padding: 60px 90px;\r\n`;\r\n\r\nexport const JoinElement = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 15px;\r\n  margin-bottom: 3px;\r\n`;\r\nexport const JoinElementTxt = styled.div`\r\n  display: flex;\r\n  p {\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n  span {\r\n    color: #ff0303;\r\n    font-size: 13px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const JoinElementInputBox = styled.div`\r\n  display: block;\r\n  text-align: start;\r\n`;\r\nexport const JoinElementInput = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 600px;\r\n  /* background: pink; */\r\n  img {\r\n    width: 180px;\r\n    height: 180px;\r\n    object-fit: cover;\r\n    border-radius: 5px;\r\n    border: 1px solid #2c39b5;\r\n  }\r\n  input {\r\n    border-radius: 5px;\r\n    border: 1px solid #2c39b5;\r\n\r\n    width: ${props => (props.width ? props.width : \"600px\")};\r\n    height: 36px;\r\n    padding-left: 15px;\r\n\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n  div {\r\n    border-radius: 5px;\r\n    border: 1px solid #2c39b5;\r\n\r\n    width: ${props => (props.width ? props.width : \"600px\")};\r\n    height: 36px;\r\n    padding-left: 15px;\r\n\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: ${props => (props.lineHight ? props.lineHight : \"normal\")};\r\n  }\r\n  /* input[type=\"file\"] {\r\n    width: 180px;\r\n    height: 180px;\r\n  } */\r\n  /* input[type=\"text\"] {\r\n    width: ${props => (props.width ? props.width : \"600px\")};\r\n    height: 36px;\r\n    padding-left: 15px;\r\n\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  } */\r\n`;\r\nexport const InputValid = styled.div`\r\n  color: red;\r\n  font-size: 15px;\r\n`;\r\nexport const ImageInputBt = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nexport const JoinAddressInput = styled.div`\r\n  display: block;\r\n  width: 600px;\r\n  text-align: start;\r\n  input {\r\n    border-radius: 5px;\r\n    border: 1px solid #2c39b5;\r\n    width: 600px;\r\n    height: 36px;\r\n    padding-left: 15px;\r\n    margin-top: 10px;\r\n\r\n    color: #000;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const ShowPasswordBt =styled.button`\r\nbackground: transparent;\r\nborder: none;\r\nwidth: 0px;\r\nheight: 0px;\r\n`;\r\nexport const ShowPasswordImg = styled.img`\r\n  width: 20px !important;\r\n  height: 20px !important;\r\n  border: none !important;\r\n  transform: translate(-150%, 40%);\r\n  cursor: pointer;\r\n`;\r\nexport const ConfirmBt = styled.button`\r\n  width: ${props => props.width ? props.width : \"105px\"};\r\n  height: 36px;\r\n  border-radius: 5px;\r\n  border: 1px solid #2c39b5;\r\n  background: #2c39b5;\r\n  cursor: pointer;\r\n\r\n  color: #fff;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n`;\r\n// export const AddressBt = styled.button`\r\n//   width: 105px;\r\n//   height: 36px;\r\n//   border-radius: 5px;\r\n//   border: 1px solid #2c39b5;\r\n//   background: #fff;\r\n\r\n//   color: #777;\r\n//   font-size: 16px;\r\n//   font-style: normal;\r\n//   font-weight: 400;\r\n//   line-height: normal;\r\n// `;\r\nexport const BtSection = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  width: ${props => (props.width ? props.width : \"\")};\r\n  margin-top: ${props => (props.mgtop ? props.mgtop : \"60px\")};\r\n  margin-bottom: ${props => (props.mgbtm ? props.mgbtm : \"90px\")};\r\n`;\r\nexport const CancelBt = styled.button`\r\n  width: 150px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  background: #f2f2ff;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: #2c39b5;\r\n  font-size: 22px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  border: 1px solid #2c39b5;\r\n`;\r\nexport const SaveBt = styled(CancelBt)`\r\n  background: #2c39b5;\r\n  color: #fff;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const VerifiBt = styled.button`\r\n  width: 320px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  background: #2c39b5;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-size: 22px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  border: 1px solid #2c39b5;\r\n`;\r\n"],"names":["joinPost","async","obj","_ref","header","headers","res","axios","post","concat","SERVER_URL","status","toString","charAt","console","log","data","alert","error","nickOverlapPost","nickPostSuccess","nickPostFail","idOverlapPost","idPostSuccess","idPostFail","verificationPost","verificationGet","id","get","Modal","children","handleClose","_jsx","style","modalStyle","_jsxs","contentStyle","closeButtonStyle","onClick","position","top","left","transform","backgroundColor","padding","width","boxShadow","right","fontSize","cursor","zIndex","ModalBackground","styled","div","_templateObject","_taggedTemplateLiteral","txt","onConfirm","JoinPopUp","_templateObject2","VerificationStyle","closeModal","setVerificationId","verificationId","resultOk","setResultOk","useState","userData","setUserData","userName","userPhone","userBirthday","handleChange","fieldName","value","sanitizedValue","test","prevState","LogoZone","Logo","src","marginBottom","LoginBox","height","mgbtm","IdBox","type","placeholder","onChange","e","target","BtSection","VerifiBt","_Fragment","CancelBt","SaveBt","result","handleVerifiConfirm","verifiData","name","phone","birthday","JoinPage","_formState$errors$nic","_formState$errors$use","_formState$errors$pas","_formState$errors$con","_formState$errors$pho","_formState$errors$ema","nickOverlapConfirm","setNickOverlapConfirm","nickConfirmModal","setNickConfirmModal","nickFailModal","setNickFailModal","nickNullModal","setNickNullModal","idOverlapConfirm","setIdOverlapConfirm","idConfirmModal","setIdConfirmModal","idFailModal","setIdFailModal","idNullModal","setIdNullModal","uploadImg","setUploadImg","process","uploadImgFile","setUploadImgFile","showPassword","setShowPassword","showPasswordConfirm","setShowPasswordConfirm","addrModal","setAddrModal","validationSchema","yup","shape","nickname","max","required","userId","min","password","confirmPassword","oneOf","phoneNumber","matches","email","register","handleSubmit","formState","watch","useForm","resolver","yupResolver","mode","photo","setPhoto","address","setAddress","restAddress","setRestAddress","isValid","setIsValid","verificationModal","setVerificationModal","setVerifiData","verifiResultModal","setVerifiResultModal","catchErr","setCatchErr","navigate","useNavigate","Layout","closeNickConfirmModal","closeNickFailModal","closeNickNullBt","closeIdConfirmModal","closeIdFailModal","closeIdNullBt","VerificationModal","closeVerificationModal","VerificationOk","verifiResultClose","handleCloseModal","DaumPostcode","onComplete","selectedAddress","autoClose","JoinPageStyle","JoinHeader","JoinBox","onSubmit","formData","FormData","dto","Blob","JSON","stringify","addr","restAddr","uid","upw","nick","iverificationInfo","append","response","fetch","blob","currentDate","Date","seconds","Math","floor","getTime","file","File","pair","entries","JoinElement","JoinElementTxt","JoinElementInputBox","JoinElementInput","htmlFor","ImageInputBt","document","getElementById","click","alt","accept","event","files","tempUrl","URL","createObjectURL","handleChangeFileOne","display","InputValid","maxLength","ConfirmBt","preventDefault","NickOverlap","nickNullBt","errors","message","minLength","length","idNullBt","IdOverlap","ShowPasswordBt","handleTogglePassword","prev","ShowPasswordImg","handleTogglePasswordConfirm","JoinAddressInput","handleClickButton","readOnly","mgtop","handleCancel","JoinFirstPageStyle","props","JoinMain","_templateObject3","JoinAgreement","_templateObject4","RadioBox","_templateObject5","button","_templateObject6","form","margin","lineHight","_templateObject7","_templateObject8","_templateObject9","_templateObject10","img","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16"],"sourceRoot":""}