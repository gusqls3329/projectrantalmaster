{"version":3,"file":"static/js/997.f1225923.chunk.js","mappings":"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","sources":["components/joinpopup/JoinPopUp.js","hooks/useCustomLogin.js","api/admin/admin_user_api.js","styles/admin/AdminReportPageStyle.js","pages/admin/AdminMemberPage.js","components/admin/ReportContent.js","api/admin/admin_report_api.js","pages/admin/AdminReportPage.js","api/admin/admin_board_api.js","styles/admin/AdminBoardPageStyle.js","pages/admin/AdminBoardPage.js","styles/PaginationStyle.js","pages/admin/AdminFreeBoardPage.js","components/admin/AdminChatHistoryModal.js","pages/admin/AdminChatHistoryPage.js","components/admin/AdminCategory.js","styles/admin/AdminPageStyle.js","components/admin/AdminReserve.js","pages/admin/AdminReservepage.js","api/admin/admin_reserve_api.js","pages/admin/AdminPage.js","styles/header/HeaderStyle.js","styles/login/LoginPageStyle.js","util/jwtUtil.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nexport const ModalBackground = styled.div`\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground: rgba(0, 0, 0, 0.5);\r\nz-index: 999;\r\n`\r\n\r\nconst JoinPopUp = ({ txt, onConfirm }) => {\r\n  const JoinPopUp = styled.div`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 1000;\r\n\r\n    width: 300px;\r\n    height: 180px;\r\n    display: flex;\r\n\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 30px;\r\n\r\n    border-radius: 10px;\r\n    border: 1px solid #2c39b5;\r\n    background: #fff;\r\n    b {\r\n      color: #000;\r\n      text-align: center;\r\n      font-size: 20px;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      line-height: normal;\r\n    }\r\n    button {\r\n      width: 100px;\r\n      height: 50px;\r\n      border-radius: 5px;\r\n      border: none;\r\n      background: #2c39b5;\r\n      cursor: pointer;\r\n      color: #fff;\r\n      font-size: 20px;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      line-height: normal;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <JoinPopUp>\r\n      <b>{txt}</b>\r\n      <button onClick={onConfirm}>확인</button>\r\n    </JoinPopUp>\r\n  );\r\n};\r\n\r\nexport default JoinPopUp;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { loginPostAsync, logout } from \"../slices/loginSlice\";\r\n\r\nconst useCustomLogin = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n  // 로그인 상태값 파악\r\n  const isLogin = sessionStorage.getItem(\"isLogin\") === \"true\";\r\n  // 로그인 기능\r\n  const doLogin = async ({ loginParam, successFn, failFn, errorFn }) => {\r\n    const action = await dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    return action.payload;\r\n  };\r\n  // 일반유저 vs 관리자\r\n  const userAuth = sessionStorage.getItem(\"userAuth\");\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n  // 로그인 페이지 이동 기능\r\n  const moveToLogin = () => {\r\n    return <Navigate replace to=\"/member/login\" />;\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    doLogin,\r\n    doLogout,\r\n    moveToPath,\r\n    moveToLogin,\r\n    userAuth,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import { SERVER_URL } from \"../config\";\r\nimport { jwtAxios } from \"../../util/jwtUtil\";\r\n\r\nconst path = `${SERVER_URL}/api`;\r\n\r\nexport const getProducts = async (page, type, search, status) => {\r\n  try {\r\n    let url = `${path}/admin/user?page=${page}`;\r\n\r\n    if (type) {\r\n      url += `&type=${type}`;\r\n    }\r\n\r\n    if (search) {\r\n      url += `&search=${search}`;\r\n    }\r\n\r\n    if (status) {\r\n      url += `&status=${status}`;\r\n    }\r\n\r\n    const res = await jwtAxios.get(url);\r\n    return res.data?.users ?? [];\r\n  } catch (error) {\r\n    console.log(error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const deleteUser = async (iuser, reason) => {\r\n  try {\r\n    const url = `${path}/admin/user/${iuser}?reason=${reason}`;\r\n    const res = await jwtAxios.delete(url); // Changed method to DELETE\r\n    return res.data?.user ?? null; // Assuming the response contains a single user object\r\n  } catch (error) {\r\n    console.log(error);\r\n    return null;\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Pagination } from \"antd\";\r\n\r\nexport const ReportTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  /* border-bottom: 1px solid #c14b45; */\r\n  padding-bottom: 17px;\r\n  margin-bottom: 30px;\r\n  h1 {\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  }\r\n  select {\r\n    width: 120px;\r\n    height: 30px;\r\n    border: 1px solid #c14b45;\r\n    cursor: pointer;\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\n\r\nexport const ReportSearchForm = styled.div`\r\n  display: flex;\r\n  width: 230px;\r\n  height: 35px;\r\n  padding-left: 10px;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  border: 1px solid #bebebe;\r\n`;\r\n\r\nexport const ReportSearchWord = styled.input`\r\n  width: 190px;\r\n  border: none;\r\n\r\n  color: rgb(0, 0, 0);\r\n  font-size: 16px;\r\n  letter-spacing: 1.5px;\r\n`;\r\n\r\nexport const ReportSearchBt = styled.button`\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url(\"/images/admin/bt_search.svg\");\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\n//member page\r\n\r\nexport const SearchOptionSelect = styled.select`\r\n  width: 120px;\r\n  height: 35px;\r\n`;\r\n\r\nexport const MemberTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  h1 {\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  }\r\n  select {\r\n    width: 100px;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    border: 1px solid #bebebe; /* 변경된 부분 */\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const MemberSearchWord = styled.input`\r\n  width: 180px;\r\n  flex-grow: 1; /* 변경된 부분 */\r\n  border: 1px solid #bebebe; /* 변경된 부분 */\r\n  border-radius: 5px;\r\n  color: rgb(0, 0, 0);\r\n  font-size: 16px;\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const MemberSearchForm = styled.div`\r\n  display: flex;\r\n  width: 330px;\r\n  height: 35px;\r\n  align-items: center;\r\n  border: 1px solid #bebebe;\r\n  border-radius: 5px;\r\n\r\n  > select {\r\n    width: 120px;\r\n    height: 35px;\r\n    border: none;\r\n    background-color: transparent;\r\n    border-right: 1px solid #bebebe;\r\n    border-radius: 5px 0 0 5px;\r\n  }\r\n\r\n  > input {\r\n    width: 200px;\r\n    border: none;\r\n    color: rgb(0, 0, 0);\r\n    font-size: 16px;\r\n    letter-spacing: 1.5px;\r\n  }\r\n`;\r\n\r\nexport const MemberSearchBt = styled.button`\r\n  width: 16px;\r\n  height: 16px;\r\n  background-image: url(\"/images/admin/bt_search.svg\");\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-right: 10px;\r\n`;\r\n\r\n//report page\r\nexport const ReportMain = styled.div`\r\n  table {\r\n    width: 100%;\r\n    text-align: center;\r\n    border-collapse: collapse;\r\n  }\r\n  thead {\r\n    height: 60px;\r\n    background: #ffe6e6;\r\n    font-size: 16px;\r\n  }\r\n  th {\r\n    border: 2px solid #fff;\r\n  }\r\n  tbody {\r\n    font-size: 18px;\r\n  }\r\n  tr {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    height: 60px;\r\n  }\r\n  td {\r\n    border: 2px solid #fff;\r\n  }\r\n  button {\r\n    width: ${props => (props.width ? props.width : \"65px\")};\r\n    height: 30px;\r\n    background: #fff;\r\n    border-radius: 8px;\r\n    border: 1px solid #79747e;\r\n    cursor: pointer;\r\n\r\n    font-weight: bold;\r\n    color: #79747e;\r\n  }\r\n  button:hover {\r\n      color: #fff;\r\n      background-color: #b6000b;\r\n      border: 2px solid #b6000b;\r\n    }\r\n`;\r\n\r\nexport const PaginationContent = styled(Pagination)`\r\n  .ant-pagination-item-active {\r\n    border-color: #c14b45;\r\n    background-color: #c14b45;\r\n  }\r\n  .ant-pagination-item-active a {\r\n    color: #fff;\r\n  }\r\n  .ant-pagination-item-active:hover {\r\n    border-color: #c14b45;\r\n    background-color: #c14b45;\r\n  }\r\n  .ant-pagination-item-active a:hover {\r\n    color: #fff;\r\n  }\r\n  .ant-pagination-options {\r\n    display: none;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getProducts, deleteUser } from \"../../api/admin/admin_user_api\";\r\nimport { Pagination } from \"antd\";\r\nimport {\r\n  MemberSearchBt,\r\n  MemberSearchForm,\r\n  MemberSearchWord,\r\n  MemberTitle,\r\n  PaginationContent,\r\n  SearchOptionSelect,\r\n} from \"../../styles/admin/AdminReportPageStyle\";\r\n\r\nconst AdminMemberPage = ({ activeBtn }) => {\r\n  const searchOptions = [\"전체\", \"이름\", \"아이디\"];\r\n  const membershipStatusOptions = [\"전체\", \"정상\", \"정지\"];\r\n  const reasonOptions = [\"이유1\", \"이유2\", \"이유3\"]; // 이유 옵션 추가\r\n  const [memberData, setMemberData] = useState([]);\r\n  const [selectedSearchOption, setSelectedSearchOption] = useState(\"전체\");\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [currentPage, selectedSearchOption, searchKeyword]);\r\n\r\n  const convertSearchTypeToNumber = type => {\r\n    switch (type) {\r\n      case \"이름\":\r\n        return 2;\r\n      case \"아이디\":\r\n        return 3;\r\n      default:\r\n        return 1; // 전체\r\n    }\r\n  };\r\n\r\n  const convertReasonToNumber = reason => {\r\n    switch (reason) {\r\n      case \"이유1\":\r\n        return 1;\r\n      case \"이유2\":\r\n        return 2;\r\n      case \"이유3\":\r\n        return 3;\r\n      default:\r\n        return 1; // 기본값 설정\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const searchTypeNumber = convertSearchTypeToNumber(selectedSearchOption);\r\n      const data = await getProducts(\r\n        currentPage,\r\n        searchTypeNumber,\r\n        searchKeyword,\r\n      );\r\n      setMemberData(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearchOptionChange = e => {\r\n    setSelectedSearchOption(e.target.value);\r\n  };\r\n\r\n  const handleSearchKeywordChange = e => {\r\n    setSearchKeyword(e.target.value);\r\n  };\r\n\r\n  const handleSearchSubmit = async () => {\r\n    setCurrentPage(1); // 검색 시에는 페이지를 1로 초기화\r\n    fetchData(); // 검색 버튼 클릭 시에만 데이터 요청\r\n  };\r\n\r\n  const handleMemberWithdrawal = async (userId, reason) => {\r\n    try {\r\n      const reasonNumber = convertReasonToNumber(reason);\r\n      const deletedUser = await deleteUser(userId, reasonNumber);\r\n      if (deletedUser) {\r\n        console.log(\"회원 탈퇴 성공:\", deletedUser);\r\n      } else {\r\n        console.log(\"회원 탈퇴 실패: 삭제된 사용자 없음\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"회원 탈퇴 실패:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MemberTitle>\r\n        <h1>{activeBtn}</h1>\r\n        <div style={{ display: \"flex\", gap: \"20px\", alignItems: \"center\" }}>\r\n          <MemberSearchForm>\r\n            <SearchOptionSelect\r\n              onChange={handleSearchOptionChange}\r\n              value={selectedSearchOption}\r\n            >\r\n              {searchOptions.map((option, index) => (\r\n                <option key={index} value={option}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </SearchOptionSelect>\r\n            <MemberSearchWord\r\n              placeholder={`${\r\n                selectedSearchOption === \"전체\"\r\n                  ? \"검색어를 입력하세요\"\r\n                  : selectedSearchOption + \"을 입력하세요\"\r\n              }`}\r\n              value={searchKeyword}\r\n              onChange={handleSearchKeywordChange}\r\n            />\r\n            <MemberSearchBt onClick={handleSearchSubmit} />\r\n          </MemberSearchForm>\r\n          <select>\r\n            {membershipStatusOptions.map((option, index) => (\r\n              <option key={index} value={index + 1}>\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </MemberTitle>\r\n\r\n      <table\r\n        style={{\r\n          borderCollapse: \"collapse\",\r\n          width: \"100%\",\r\n          marginTop: \"25px\",\r\n        }}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th style={tableHeaderStyle}>유저 번호</th>\r\n            <th style={tableHeaderStyle}>아이디</th>\r\n            <th style={tableHeaderStyle}>닉네임</th>\r\n            <th style={tableHeaderStyle}>가입일시</th>\r\n            <th style={tableHeaderStyle}>이메일</th>\r\n            <th style={tableHeaderStyle}>벌점</th>\r\n            <th style={tableHeaderStyle}>회원상태</th>\r\n            <th style={tableHeaderStyle}>회원관리</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {memberData.map((member, index) => (\r\n            <tr key={index}>\r\n              <td style={tableCellStyle}>{member.iuser}</td>\r\n              <td style={tableCellStyle}>{member.uid}</td>\r\n              <td style={tableCellStyle}>{member.nick}</td>\r\n              <td style={tableCellStyle}>\r\n                {new Date(member.createdAt).toLocaleString()}\r\n              </td>\r\n              <td style={tableCellStyle}>{member.email}</td>\r\n              <td style={tableCellStyle}>{member.penalty}</td>\r\n              <td style={tableCellStyle}>\r\n                <span\r\n                  style={{\r\n                    color: member.penalty <= -50 ? \"#B6000B\" : \"#000\",\r\n                  }}\r\n                >\r\n                  {member.penalty > -50 ? \"정상\" : \"정지\"}\r\n                </span>\r\n              </td>\r\n              <td style={tableCellStyle}>\r\n                <button\r\n                  style={managementButtonStyle}\r\n                  onClick={() => handleMemberWithdrawal(member.iuser)} // iuser 전달\r\n                >\r\n                  회원탈퇴\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <PaginationContent\r\n        current={currentPage}\r\n        total={100}\r\n        onChange={page => setCurrentPage(page)}\r\n        pageSize={10}\r\n        showSizeChanger={false}\r\n        style={{ marginTop: \"20px\", textAlign: \"center\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tableHeaderStyle = {\r\n  padding: \"10px\",\r\n  border: \"2px solid #fff\",\r\n  height: \"60px\",\r\n  textAlign: \"center\",\r\n  backgroundColor: \"#FFE6E6\",\r\n  fontWeight: \"700\",\r\n  fontSize: \"16px\",\r\n};\r\n\r\nconst tableCellStyle = {\r\n  padding: \"10px\",\r\n  border: \"2px solid #fff\",\r\n  height: \"60px\",\r\n  textAlign: \"center\",\r\n  fontSize: \"16px\",\r\n};\r\n\r\nconst managementButtonStyle = {\r\n  width: \"90px\",\r\n  height: \"32px\",\r\n  borderRadius: \"8px\",\r\n  background: \"#B6000B\",\r\n  fontSize: \"14px\",\r\n  color: \"#fff\",\r\n  border: \"none\",\r\n  boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.2)\",\r\n  cursor: \"pointer\",\r\n  zIndex: 1,\r\n};\r\n\r\nexport default AdminMemberPage;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nconst ReportContentStyle = styled.div`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 1000;\r\n\r\n    width: 600px;\r\n    /* height: 500px; */\r\n    border-radius: 10px;\r\n    border: 1px solid #e46962;\r\n    background: #fff;\r\n    padding: 20px;\r\n  `;\r\n  const ContentTitle = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 550px;\r\n    height: 50px;\r\n    margin: 0 auto;\r\n    background: #ffe6e6;\r\n    padding: 5px 0 0 10px;\r\n    p {\r\n      color: #000;\r\n      font-size: 25px;\r\n      font-style: normal;\r\n      font-weight: 600;\r\n      line-height: normal;\r\n    }\r\n    img {\r\n      width: 40px;\r\n      height: 40px;\r\n      cursor: pointer;\r\n    }\r\n  `;\r\n  const ContentMain = styled.div`\r\n    width: 550px;\r\n    height: 330px;\r\n    margin: 0 auto;\r\n    background: #fff7f7;\r\n    padding: 10px;\r\n    text-align: start;\r\n    p {\r\n      color: #000;\r\n      font-size: 16px;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      line-height: normal;\r\n    }\r\n  `;\r\n  const BtSection = styled.div`\r\n    width: 270px;\r\n    margin: 0 auto;\r\n    padding-top: 30px;\r\n    padding-bottom: 10px;\r\n    button {\r\n      width: 100px;\r\n      height: 40px;\r\n      border-radius: 3px;\r\n      border: none;\r\n      font-size: 18px;\r\n      font-weight: 500;\r\n    }\r\n    .BtNo {\r\n      border: 1px solid #c14b45;\r\n      background: #fff;\r\n      color: #c14b45;\r\n      margin-right: 70px;\r\n    }\r\n    .BtOk {\r\n      background: #c14b45;\r\n      color: #fff;\r\n    }\r\n  `;\r\n\r\nexport const ReportYetContent = ({ detail, onClose, Bt_No, Bt_Ok }) => {\r\n  \r\n  return (\r\n    <ReportContentStyle>\r\n      <ContentTitle>\r\n        <p>신고 내용</p>\r\n        <img src=\"/images/admin/bt_close.svg\" onClick={onClose}></img>\r\n      </ContentTitle>\r\n      <ContentMain>\r\n        <p>\r\n          {detail}\r\n        </p>\r\n      </ContentMain>\r\n      <BtSection>\r\n        <button className=\"BtNo\" onClick={Bt_No}>\r\n          반려\r\n        </button>\r\n        <button className=\"BtOk\" onClick={Bt_Ok}>\r\n          수락\r\n        </button>\r\n      </BtSection>\r\n    </ReportContentStyle>\r\n  );\r\n};\r\n\r\n\r\nexport const ReportDoneContent = ({ detail, onClose }) => {\r\n  \r\n  return (\r\n    <ReportContentStyle>\r\n      <ContentTitle>\r\n        <p>신고 내용</p>\r\n        <img src=\"/images/admin/bt_close.svg\" onClick={onClose}></img>\r\n      </ContentTitle>\r\n      <ContentMain>\r\n        <p>\r\n          {detail}\r\n        </p>\r\n      </ContentMain>\r\n    </ReportContentStyle>\r\n  );\r\n};","import { jwtAxios } from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\n// 신고내역 list 조회\r\nexport const getDispute = async (\r\n  page,\r\n  div,\r\n  search,\r\n  category,\r\n  state,\r\n  setReportList,\r\n  setReportLength,\r\n) => {\r\n  try {\r\n    let url = `${SERVER_URL}/api/admin/dispute?page=${page}&div=${div}`;\r\n    if (search) {\r\n      url += `&search=${search}`;\r\n    }\r\n    if (category) {\r\n      url += `&category=${category}`;\r\n    }\r\n    if (state!==null) {\r\n      url += `&status=${state}`;\r\n    }\r\n\r\n    const res = await jwtAxios.get(url);\r\n    setReportList([...res.data.disputes]);\r\n    setReportLength(res.data.totalDisputeCount)\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// 신고 수락 or 반려\r\nexport const postDispute = async (idispute, type) => {\r\n  try {\r\n    const url = `${SERVER_URL}/api/admin/dispute/${idispute}?type=${type}`;\r\n\r\n    const res = await jwtAxios.post(url);\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  PaginationContent,\r\n  ReportMain,\r\n  ReportSearchBt,\r\n  ReportSearchForm,\r\n  ReportSearchWord,\r\n  ReportTitle,\r\n} from \"../../styles/admin/AdminReportPageStyle\";\r\nimport {\r\n  ReportDoneContent,\r\n  ReportYetContent,\r\n} from \"../../components/admin/ReportContent\";\r\nimport { ModalBackground } from \"../../components/joinpopup/JoinPopUp\";\r\nimport { getDispute, postDispute } from \"../../api/admin/admin_report_api\";\r\n\r\nconst stateCate = [\r\n  {\r\n    id: 1,\r\n    title: \"수락\",\r\n  },\r\n  {\r\n    id: -1,\r\n    title: \"반려\",\r\n  },\r\n  {\r\n    id: 0,\r\n    title: \"미처리\",\r\n  },\r\n];\r\n\r\nconst conflictCate = [\r\n  // {\r\n  //   id: 0,\r\n  //   title: \"전체\",\r\n  // },\r\n  {\r\n    id: 1,\r\n    title: \"잠수(구매전)\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"잠수(구매후)\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"허위매물\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"바꿔치기\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"매너\",\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"지연\",\r\n  },\r\n];\r\n\r\nconst accidentCate = [\r\n  // {\r\n  //   id: 0,\r\n  //   title: \"전체\",\r\n  // },\r\n  {\r\n    id: -1,\r\n    title: \"파손\",\r\n  },\r\n  {\r\n    id: -2,\r\n    title: \"분실\",\r\n  },\r\n];\r\n\r\nconst conflictData = [\r\n  {\r\n    id: 1,\r\n    uid: \"junseo\",\r\n    nick: \"바보준서\",\r\n    cate: \"잠수(구매전)\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"kong123\",\r\n    penaltyPoint: \"-15\",\r\n    state: \"반려\",\r\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\r\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\r\n  },\r\n  {\r\n    id: 2,\r\n    uid: \"qwqwqw11\",\r\n    nick: \"현빈대마왕\",\r\n    cate: \"지연\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"qwqwqw55\",\r\n    penaltyPoint: \"-10\",\r\n    state: \"수락\",\r\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\r\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\r\n  },\r\n  {\r\n    id: 3,\r\n    uid: \"junseo\",\r\n    nick: \"바보준서\",\r\n    cate: \"잠수(구매전)\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"kong123\",\r\n    penaltyPoint: \"-15\",\r\n    state: \"수락\",\r\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\r\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\r\n  },\r\n  {\r\n    id: 4,\r\n    uid: \"qwqwqw11\",\r\n    nick: \"현빈대마왕\",\r\n    cate: \"지연\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"qwqwqw55\",\r\n    penaltyPoint: \"-10\",\r\n    state: \"반려\",\r\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\r\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\r\n  },\r\n  {\r\n    id: 5,\r\n    uid: \"junseo\",\r\n    nick: \"바보준서\",\r\n    cate: \"잠수(구매전)\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"kong123\",\r\n    penaltyPoint: \"-15\",\r\n    state: \"미처리\",\r\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\r\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\r\n  },\r\n  {\r\n    id: 6,\r\n    uid: \"qwqwqw11\",\r\n    nick: \"현빈대마왕\",\r\n    cate: \"지연\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"qwqwqw55\",\r\n    penaltyPoint: \"-10\",\r\n    state: \"미처리\",\r\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\r\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\r\n  },\r\n  {\r\n    id: 7,\r\n    uid: \"junseo\",\r\n    nick: \"바보준서\",\r\n    cate: \"파손\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"kong123\",\r\n    penaltyPoint: \"-15\",\r\n    state: \"반려\",\r\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\r\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\r\n  },\r\n  {\r\n    id: 8,\r\n    uid: \"qwqwqw11\",\r\n    nick: \"현빈대마왕\",\r\n    cate: \"파손\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"qwqwqw55\",\r\n    penaltyPoint: \"-10\",\r\n    state: \"수락\",\r\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\r\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\r\n  },\r\n  {\r\n    id: 9,\r\n    uid: \"junseo\",\r\n    nick: \"바보준서\",\r\n    cate: \"분실\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"kong123\",\r\n    penaltyPoint: \"-15\",\r\n    state: \"수락\",\r\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\r\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\r\n  },\r\n  {\r\n    id: 10,\r\n    uid: \"qwqwqw11\",\r\n    nick: \"현빈대마왕\",\r\n    cate: \"파손\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"qwqwqw55\",\r\n    penaltyPoint: \"-10\",\r\n    state: \"반려\",\r\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\r\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\r\n  },\r\n  {\r\n    id: 11,\r\n    uid: \"junseo\",\r\n    nick: \"바보준서\",\r\n    cate: \"분실\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"kong123\",\r\n    penaltyPoint: \"-15\",\r\n    state: \"미처리\",\r\n    content: `15일 14시에 중앙로역에서 만나기로 했는데 안 나왔어요.\r\n    한시간동안 기다렸는데 연락도 없고!!! 아주 나쁜 놈이네요`,\r\n  },\r\n  {\r\n    id: 12,\r\n    uid: \"qwqwqw11\",\r\n    nick: \"현빈대마왕\",\r\n    cate: \"분실\",\r\n    date: \"2024.02.15\",\r\n    oppositeId: \"qwqwqw55\",\r\n    penaltyPoint: \"-10\",\r\n    state: \"미처리\",\r\n    content: `오늘까지 대여 날짜인데 반납할 시간 없다고 내일 반납한다고 하네요.\r\n    내일 대여하기로 한 사람있는데 전 어떻게 해야하죠??`,\r\n  },\r\n];\r\n\r\nconst AdminReportPage = ({ activeBtn }) => {\r\n  // 데이터 연동(목록 불러오기)\r\n  const [reportList, setReportList] = useState([]);\r\n  const [reportLength, setReportLength] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [div, setDiv] = useState(null);\r\n  const [search, setSearch] = useState(null);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [category, setCategory] = useState(null);\r\n  const [state, setState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      if (activeBtn === \"분쟁 신고\") {\r\n        setDiv(1);\r\n      } else if (activeBtn === \"사고 신고\") {\r\n        setDiv(-1);\r\n      }\r\n      // setData(result)\r\n    };\r\n    fetchData();\r\n  }, [activeBtn]);\r\n\r\n  const reportListData = async () => {\r\n    await getDispute(\r\n      page,\r\n      div,\r\n      search,\r\n      category,\r\n      state,\r\n      setReportList,\r\n      setReportLength,\r\n    );\r\n    // setReportList(res.data)\r\n  };\r\n  useEffect(() => {\r\n    reportListData();\r\n  }, [page, div, search, category, state]);\r\n\r\n  // 데이터 연동(신고 수락 or 반려)\r\n  const [type, setType] = useState(null);\r\n  const [idispute, setIdispute] = useState(null);\r\n  const handleClickOk = () => {\r\n    setType(1);\r\n    setContentYetModal(false);\r\n  };\r\n  const handleClickNo = () => {\r\n    setType(-1);\r\n    setContentYetModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const stateData = async () => {\r\n      await postDispute(idispute, type);\r\n      await reportListData();\r\n      setType(null);\r\n      setIdispute(null);\r\n    };\r\n    if (type !== null && idispute !== null) {\r\n      stateData();\r\n    }\r\n  }, [idispute, type]);\r\n\r\n  // 상태변경 or 상태확인 버튼 클릭\r\n  const [contentYetModal, setContentYetModal] = useState(false);\r\n  const [contentDoneModal, setContentDoneModal] = useState(false);\r\n  const [selectedDetail, setSelectedDetail] = useState(null);\r\n\r\n  const handleClickYet = (detail, idispute) => {\r\n    setSelectedDetail(detail);\r\n    setIdispute(idispute);\r\n    setContentYetModal(true);\r\n  };\r\n  const closeContentYetModal = () => {\r\n    setContentYetModal(false);\r\n  };\r\n  const handleClickDone = detail => {\r\n    setSelectedDetail(detail);\r\n    setContentDoneModal(true);\r\n  };\r\n  const closeContentDoneModal = () => {\r\n    setContentDoneModal(false);\r\n  };\r\n\r\n  // 페이지네이션\r\n  // const [pageNum, setPageNum] = useState(1);\r\n  const handlePageChange = _tempPage => {\r\n    setPage(_tempPage);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contentYetModal && (\r\n        <>\r\n          <ReportYetContent\r\n            onClose={closeContentYetModal}\r\n            detail={selectedDetail}\r\n            Bt_No={handleClickNo}\r\n            Bt_Ok={handleClickOk}\r\n          />\r\n          <ModalBackground />\r\n        </>\r\n      )}\r\n      {contentDoneModal && (\r\n        <>\r\n          <ReportDoneContent\r\n            onClose={closeContentDoneModal}\r\n            detail={selectedDetail}\r\n          />\r\n          <ModalBackground />\r\n        </>\r\n      )}\r\n      <ReportTitle>\r\n        <h1>{activeBtn}</h1>\r\n        <div style={{ display: \"flex\", gap: \"20px\", alignItems: \"center\" }}>\r\n          <ReportSearchForm>\r\n            <ReportSearchWord\r\n              type=\"text\"\r\n              placeholder={\"아이디를 입력하세요\"}\r\n              value={inputValue}\r\n              onChange={e => setInputValue(e.target.value)}\r\n            ></ReportSearchWord>\r\n            <ReportSearchBt\r\n              type=\"button\"\r\n              onClick={() => setSearch(inputValue)}\r\n            />\r\n          </ReportSearchForm>\r\n          {activeBtn === \"분쟁 신고\" ? (\r\n            <select onChange={e => setCategory(e.target.value)} defaultValue=\"\">\r\n              <option value=\"\" disabled hidden>\r\n                카테고리 선택\r\n              </option>\r\n              {conflictCate.map(item => {\r\n                return (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.title}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          ) : (\r\n            <select onChange={e => setCategory(e.target.value)} defaultValue=\"\">\r\n              <option value=\"\" disabled hidden>\r\n                카테고리\r\n              </option>\r\n              {accidentCate.map(item => {\r\n                return (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.title}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          )}\r\n          <select onChange={e => setState(e.target.value)} defaultValue=\"\">\r\n            <option value=\"\" disabled hidden>\r\n              상태 선택\r\n            </option>\r\n            {stateCate.map(item => {\r\n              return (\r\n                <option key={item.id} value={item.id}>\r\n                  {item.title}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </ReportTitle>\r\n      <ReportMain>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>아이디</th>\r\n              <th>닉네임</th>\r\n              <th>신고 카테고리</th>\r\n              <th>신고일자</th>\r\n              <th>신고한 유저</th>\r\n              <th>벌점</th>\r\n              <th>상태</th>\r\n              <th>\r\n                변경 및<br />\r\n                조회\r\n              </th>\r\n              {/* <th>조회</th> */}\r\n            </tr>\r\n          </thead>\r\n          {reportList.map((item, index) => (\r\n            <tbody\r\n              key={item.idispute}\r\n              style={{\r\n                backgroundColor: index % 2 === 0 ? \"inherit\" : \"#FFF7F7\",\r\n              }}\r\n            >\r\n              <tr>\r\n                <td>{item.reportedUserUid}</td>\r\n                <td>{item.reportedUserNick}</td>\r\n                <td style={{ cursor: \"pointer\" }}>{item.category}</td>\r\n                <td>{new Date(item.createdAt).toLocaleString()}</td>\r\n                <td>{item.reporterUid}</td>\r\n                <td>{item.penalty}</td>\r\n                <td>{item.status} </td>\r\n                <td>\r\n                  {item.status === \"대기중\" ? (\r\n                    <button\r\n                      onClick={() => handleClickYet(item.detail, item.idispute)}\r\n                    >\r\n                      확인\r\n                    </button>\r\n                  ) : (\r\n                    <button onClick={() => handleClickDone(item.detail)}>\r\n                      확인\r\n                    </button>\r\n                  )}\r\n                </td>\r\n                {/* <td>\r\n                  <button>이동</button>\r\n                </td> */}\r\n              </tr>\r\n            </tbody>\r\n          ))}\r\n        </table>\r\n      </ReportMain>\r\n      <div style={{ margin: \"0 auto\" }}>\r\n        <PaginationContent\r\n          current={page}\r\n          onChange={handlePageChange}\r\n          total={reportLength}\r\n          pageSize={12}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminReportPage;\r\n","import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport { jwtAxios } from \"../../util/jwtUtil\";\r\n\r\nconst path = `${SERVER_URL}/api`;\r\n\r\n// 상품 게시판 api\r\nexport const getAllProducts = async (\r\n  page,\r\n  successFn,\r\n  errorFn,\r\n  type,\r\n  search,\r\n  sort,\r\n) => {\r\n  try {\r\n    //                  /admin/product?page=${page}&type=${type}////\r\n    let base_url = `${path}/admin/product?page=${page}`;\r\n    if (type && search) base_url += `&type=${type}&search=${search}`;\r\n    if (sort && sort !== 0) base_url += `&sort=${sort}`;\r\n\r\n    const res = await jwtAxios.get(base_url);\r\n    const status = res.status.toString();\r\n    \r\n    if (status.charAt(0) === \"2\") successFn(res.data);\r\n\r\n    return res.data;\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res);\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (iproduct, reason, errorFn) => {\r\n  try {\r\n    // http://192.168.0.144:5226/api/admin/product/102?reason=1\r\n    const url = `${path}/admin/product/${iproduct}?reason=${reason}`;\r\n    const res = await jwtAxios.delete(url);\r\n    const status = res.status.toString();\r\n    // if (status.charAt(0) === \"2\") {\r\n    //   successFn(res.data.result === 1);\r\n    // }\r\n    return res.data;\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res);\r\n  }\r\n};\r\n\r\n// 자유 게시판 api\r\nexport const getFreeBoard = async (\r\n    page,\r\n    successFn,\r\n    errorFn,\r\n    type,\r\n    search,\r\n    sort,\r\n  ) => {\r\n    try {\r\n      // http://192.168.0.144:5226/api/admin/product\r\n      //                  /admin/product?page=${page}&type=${type}////\r\n      console.log(type, search, sort);\r\n      let base_url = `${path}/admin/board?page=${page}`;\r\n      if (type && search) base_url += `&type=${type}&search=${search}`;\r\n      if (sort && sort !== 0) base_url += `&sort=${sort}`;\r\n  \r\n      const res = await jwtAxios.get(base_url);\r\n      const status = res.status.toString();\r\n      \r\n      if (status.charAt(0) === \"2\") successFn(res.data);\r\n      return res.data;\r\n    } catch (error) {\r\n      const res = error.response.data;\r\n      errorFn(res);\r\n    }\r\n  };\r\n\r\n// export const getFreeBoard = async (page, successFn, errorFn) => {\r\n//     try {\r\n//       // http://192.168.0.144:5226/api/admin/product\r\n//       //                  /admin/product?page=${page}&type=${type}////\r\n//       const url = `${path}/admin/board?page=${page}`;\r\n//       const res = await jwtAxios.get(url);\r\n//       const status = res.status.toString();\r\n//       if (status.charAt(0) === \"2\") {\r\n//         successFn(res.data);\r\n//       }\r\n//       return res.data;\r\n//     } catch (error) {\r\n//       const res = error.response.data;\r\n//       errorFn(res);\r\n//     }\r\n//   };\r\n\r\n\r\n\r\nexport const deleteFreeBoard = async (iboard, reason, errorFn) => {\r\n  try {\r\n    //                  /admin/board/41?reason=1\r\n    const url = `${path}/admin/board/${iboard}?reason=${reason}`;\r\n    const res = await jwtAxios.delete(url);\r\n    const status = res.status.toString();\r\n    // if (status.charAt(0) === \"2\") {\r\n    //   successFn(res.data.result === 1);\r\n    // }\r\n    return res.data;\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res);\r\n  }\r\n};\r\n\r\n// 신고된 채팅 전체 내역\r\nexport const getChatHistory = async (page, successFn, errorFn) => {\r\n  try {\r\n    // http://192.168.0.144:5226/api/admin/product\r\n    //                  /admin/product?page=${page}&type=${type}////\r\n    const url = `${path}/admin/chat?page=${page}`;\r\n    const res = await jwtAxios.get(url);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    }\r\n    return res.data;\r\n  } catch (error) {\r\n    const res = error.response.data;\r\n    errorFn(res);\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\nexport const BoardWrap = styled.div`\r\n  text-align: center;\r\n  .move,\r\n  .delete {\r\n    width: 60px;\r\n    height: 30px;\r\n    font-weight: bold;\r\n    color: #79747e;\r\n    background: #fff;\r\n    border: 1px solid #79747e;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #fff;\r\n      background-color: #b6000b;\r\n      border: 2px solid #b6000b;\r\n    }\r\n  }\r\n  .board-data {\r\n    > td {\r\n      padding: 15px 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const HeaderWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  top: 50px;\r\n  padding-top: 20px;\r\n  padding-bottom: 30px;\r\n\r\n  .header-title {\r\n    display: flex;\r\n  }\r\n  .title {\r\n    font-size: 24px;\r\n  }\r\n  .total {\r\n    font-size: 19px;\r\n    padding-top: 5px;\r\n    padding-left: 10px;\r\n  }\r\n  .search-wrap {\r\n    margin-left: 350px;\r\n      position: relative;\r\n      display: flex;\r\n      select {\r\n        width: 100px;\r\n        height: 40px;\r\n        border: 1px solid #bebebe;\r\n        border-right: none;\r\n        border-radius: 5px 0 0 5px;\r\n        border-top-left-radius: none;\r\n      }\r\n      input {\r\n        width: 300px;\r\n        height: 40px;\r\n        border: 1px solid #bebebe;\r\n        border-radius: 5px;\r\n        padding-left: 15px;\r\n        color: #000;\r\n        font-size: 16px;\r\n        border-radius: 0 5px 5px 0;\r\n        ::placeholder {\r\n          color: #bebebe;\r\n          letter-spacing: 1.5px;\r\n        }\r\n      }\r\n      button {\r\n        position: absolute;\r\n        padding-right: 10px;\r\n        top: 10px;\r\n        right: 0;\r\n        background: transparent;\r\n        border: none;\r\n        cursor: pointer;\r\n        img {\r\n          width: 20px;\r\n          height: 20px;\r\n        }\r\n      }\r\n      select {\r\n        font-size: 16px;\r\n        color: #777;\r\n        padding-left: 10px;\r\n      }\r\n    }\r\n  .bt-wrap {\r\n    display: flex;\r\n    margin-top: 8px;\r\n    > div {\r\n      display: flex;\r\n      width: 120px;\r\n      justify-content: space-evenly;\r\n    }\r\n    button {\r\n      border: none;\r\n      background: transparent;\r\n      font-size: 15px;\r\n      color: #777;\r\n      cursor: pointer;\r\n    }\r\n    img {\r\n      width: 10px;\r\n      height: 20px;\r\n      margin-top: 5px;\r\n    }\r\n  }\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { deleteProduct, getAllProducts } from \"../../api/admin/admin_board_api\";\r\nimport { BoardWrap, HeaderWrap } from \"../../styles/admin/AdminBoardPageStyle\";\r\nimport { PaginationContent } from \"../../styles/admin/AdminReportPageStyle\";\r\n\r\nconst boardData = [\r\n  {\r\n    totalDisputeCount: 0,\r\n    products: [\r\n      {\r\n        iproduct: 114,\r\n        iuser: 1,\r\n        nick: \"ㅎㅎㅎㅎㅎ\",\r\n        mainCategory: 1,\r\n        subCategory: 2,\r\n        pricePerDay: 2,\r\n        view: 50,\r\n        createdAt: \"2024-02-27T10:41:13.518Z\",\r\n        status: 0,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst initBoardData = {\r\n  totalDisputeCount: 0,\r\n  products: [\r\n    {\r\n      iproduct: 0,\r\n      iuser: 0,\r\n      nick: \"string\",\r\n      mainCategory: 2,\r\n      subCategory: 1,\r\n      pricePerDay: 0,\r\n      view: 0,\r\n      createdAt: \"2024-02-27T11:23:41.089Z\",\r\n      status: 0,\r\n    },\r\n  ],\r\n};\r\n\r\nconst category = [\r\n  {\r\n    mainCategory: \"스마트 기기\",\r\n    subCategory: [\r\n      { id: 1, title: \"스마트 워치\" },\r\n      { id: 2, title: \"태블릿\" },\r\n      { id: 3, title: \"갤럭시\" },\r\n      { id: 4, title: \"아이폰\" },\r\n    ],\r\n  },\r\n  {\r\n    mainCategory: \"PC / 노트북\",\r\n    subCategory: [\r\n      { id: 1, title: \"노트북\" },\r\n      { id: 2, title: \"PC\" },\r\n      { id: 3, title: \"마우스\" },\r\n      { id: 4, title: \"키보드\" },\r\n    ],\r\n  },\r\n  {\r\n    mainCategory: \"영상 / 카메라\",\r\n    subCategory: [\r\n      { id: 1, title: \"빔프로젝터\" },\r\n      { id: 2, title: \"셋톱박스\" },\r\n      { id: 3, title: \"카메라\" },\r\n      { id: 4, title: \"캠코더\" },\r\n      { id: 5, title: \"DSLR\" },\r\n    ],\r\n  },\r\n  {\r\n    mainCategory: \"음향\",\r\n    subCategory: [\r\n      { id: 1, title: \"스피커\" },\r\n      { id: 2, title: \"이어폰\" },\r\n      { id: 3, title: \"헤드폰\" },\r\n      { id: 4, title: \"마이크\" },\r\n    ],\r\n  },\r\n  {\r\n    mainCategory: \"게임 기기\",\r\n    subCategory: [\r\n      { id: 1, title: \"플레이스테이션\" },\r\n      { id: 2, title: \"닌텐도\" },\r\n      { id: 3, title: \"Wii\" },\r\n      { id: 4, title: \"XBOX\" },\r\n      { id: 5, title: \"기타\" },\r\n    ],\r\n  },\r\n];\r\nconst SEARCH_OPTIONS = [\"전체\", \"닉네임\", \"카테고리\"];\r\n\r\nconst SEARCH_OPTIONS_TEXT = [\r\n  // \"검색어를 입력해주세요\",\r\n  \"닉네임을 입력해주세요\",\r\n  \"카테고리를 입력해주세요\",\r\n];\r\n\r\nconst AdminBoardPage = () => {\r\n  const navigate = useNavigate();\r\n  const moveToDetail = (mainCategory, subCategory, iproduct) => {\r\n    navigate(`/details?mc=${mainCategory}&sc=${subCategory}&productId=${iproduct}`)\r\n  }\r\n  // 전체 게시물 데이터\r\n  const [boardAllData, setBoardAllData] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [selectedSearchOption, setSelectedSearchOption] = useState(0); // 선택된 검색 옵션 상태\r\n  const [inputValue, setInputValue] = useState(\"\"); // 검색어 상태\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\"); // 검색어 상태\r\n  \r\n  const successFn = res => setBoardAllData(res);\r\n\r\n  const errorFn = res => alert(`${res.message} \\n 에러코드(${res.errorCode})`);\r\n\r\n  // 페이지네이션\r\n  const handlePageChange = _tempPage => {\r\n    setPage(_tempPage);\r\n    getAllProducts(\r\n      _tempPage,\r\n      successFn, \r\n      errorFn, \r\n      selectedSearchOption, \r\n      inputValue,\r\n      sortType\r\n      );\r\n  };\r\n\r\n\r\n  const handleSearchOptionChange = e => setSelectedSearchOption(e.target.value);\r\n\r\n  const handleSearchKeywordChange = e => setInputValue(e.target.value);\r\n\r\n  const handleSearchSubmit = () => {\r\n    getAllProducts(1, successFn, errorFn, selectedSearchOption, inputValue);\r\n    setSearchKeyword(inputValue);\r\n    setPage(1);\r\n  };\r\n  \r\n  // 게시글 삭제\r\n  const handleClickDelete = async iproduct => {\r\n    const confirmDelete = window.confirm(\"해당 게시물을 삭제하시겠습니까?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        const reason = 1;\r\n        const res = await deleteProduct(iproduct, reason, errorFn);\r\n        getAllProducts(\r\n          page,\r\n          successFn,\r\n          errorFn,\r\n          selectedSearchOption,\r\n          inputValue,\r\n        );\r\n        setSearchKeyword(inputValue);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const [sortType, setSortType] = useState();\r\n  const getSortedData = newSortType => {\r\n    setSortType(newSortType); // 정렬 상태 변경\r\n    getAllProducts(\r\n      1, // 첫 페이지부터 데이터를 가져옴\r\n      successFn,\r\n      errorFn,\r\n      selectedSearchOption,\r\n      inputValue,\r\n      newSortType // 변경된 정렬 상태를 함께 전달\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"인풋밸류\", inputValue, \"서치키워드\", searchKeyword);\r\n  }, [inputValue, searchKeyword]);\r\n  useEffect(() => {\r\n    getAllProducts(page, successFn, errorFn);\r\n  }, []);\r\n\r\n  return (\r\n    <BoardWrap>\r\n      <HeaderWrap>\r\n        <div className=\"header-title\">\r\n          <div className=\"title\">상품 게시판</div>\r\n          <div className=\"total\">총 {boardAllData.totalDisputeCount}개</div>\r\n        </div>\r\n        <div className=\"search-wrap\">\r\n          <select\r\n            onChange={handleSearchOptionChange}\r\n            value={selectedSearchOption}\r\n          >\r\n            {SEARCH_OPTIONS.map((option, index) => (\r\n              <option key={option} value={index}>\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={SEARCH_OPTIONS_TEXT[selectedSearchOption]}\r\n            value={inputValue}\r\n            onChange={handleSearchKeywordChange}\r\n            // disabled={selectedSearchOption === 0}\r\n          />\r\n          <button onClick={handleSearchSubmit} type=\"submit\">\r\n            <img src=\"/images/admin/bt_search.svg\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"bt-wrap\">\r\n          <div>\r\n            <button onClick={() => getSortedData(0)}>최신순</button>\r\n            <img src=\"/images/admin/line.svg\" />\r\n            <button onClick={() => getSortedData(1)}>조회순</button>\r\n          </div>\r\n        </div>\r\n      </HeaderWrap>\r\n      <table style={{ width: \"100%\" }}>\r\n        <thead\r\n          style={{ height: \"50px\", background: \"#FFE6E6\", fontSize: \"16px\" }}\r\n        >\r\n          <tr>\r\n            <th>상품번호</th>\r\n            <th>카테고리</th>\r\n            <th>대여 가격</th>\r\n            <th>판매자 이름</th>\r\n            <th>조회수</th>\r\n            <th>등록일</th>\r\n            <th>상품 조회</th>\r\n            <th>상품 관리</th>\r\n          </tr>\r\n        </thead>\r\n        {boardAllData &&\r\n          boardAllData.products &&\r\n          boardAllData.products.map((item, index) => (\r\n            <React.Fragment key={index}>\r\n              <tbody\r\n                key={item.id}\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  background: index % 2 === 1 ? \"#FFF7F7\" : \"inherit\",\r\n                }}\r\n              >\r\n                <tr className=\"board-data\">\r\n                  <td>{item.iproduct}</td>\r\n                  <td>\r\n                    {\r\n                      category[item.mainCategory - 1].subCategory[\r\n                        item.subCategory - 1\r\n                      ].title\r\n                    }\r\n                  </td>\r\n                  <td>{item.pricePerDay.toLocaleString()}</td>\r\n                  <td>{item.nick}</td>\r\n                  <td>{item.view}</td>\r\n                  <td>{new Date(item.createdAt).toLocaleString()}</td>                  <td>\r\n                    {item.productInquiry}\r\n                    <button \r\n                    className=\"move\"\r\n                    onClick={() => moveToDetail(item.mainCategory,item.subCategory,item.iproduct)}\r\n                    >이동</button>\r\n                  </td>\r\n                  <td>\r\n                    {item.productManage}\r\n                    <button\r\n                      className=\"delete\"\r\n                      onClick={e => {\r\n                        handleClickDelete(item.iproduct);\r\n                      }}\r\n                    >\r\n                      삭제\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </React.Fragment>\r\n          ))}\r\n      </table>\r\n      <div>\r\n        <PaginationContent\r\n          current={page}\r\n          onChange={handlePageChange}\r\n          total={boardAllData.totalDisputeCount}\r\n          pageSize={12}\r\n          style={{paddingTop: \"30px\"}}\r\n        />\r\n      </div>\r\n    </BoardWrap>\r\n  );\r\n};\r\n\r\nexport default AdminBoardPage;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const PaginationContainer = styled.div`\r\npadding-top: 50px;\r\ndisplay: flex;\r\njustify-content: center;\r\n.page-link {\r\n    color: #111;\r\n    width: 40px;\r\n    height: 40px;\r\n    font-size: 18px;\r\n    text-align: center;\r\n    border: none;\r\n}\r\n.pagination .page-item.active .page-link {\r\n    padding-top: 5px;\r\n  background-color: #FFE6E6;\r\n  border-radius: 5px;\r\n}\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { BoardWrap, HeaderWrap } from '../../styles/admin/AdminBoardPageStyle'\r\nimport Pagination from '../../components/Pagination'\r\nimport { deleteFreeBoard, getFreeBoard } from '../../api/admin/admin_board_api'\r\nimport { PaginationContent } from '../../styles/admin/AdminReportPageStyle'\r\n\r\nconst boardData = {\r\n  \"totalBoardCount\": 11,\r\n  \"boards\": [\r\n    {\r\n      \"iboard\": 32,\r\n      \"nick\": \"hehe\",\r\n      \"view\": 20,\r\n      \"createdAt\": \"2024-02-28T11:00:46.575Z\"\r\n    }\r\n  ]\r\n}\r\n\r\nconst initFreeBoardData = {\r\n  \"totalBoardCount\": 11,\r\n  \"boards\": [\r\n    {\r\n      \"iboard\": 32,\r\n      \"nick\": \"hehe\",\r\n      \"view\": 20,\r\n      \"createdAt\": \"2024-02-28T11:00:46.575Z\"\r\n    }\r\n  ]\r\n}\r\nconst SEARCH_OPTIONS = [\"전체\", \"닉네임\", \"제목\"];\r\n\r\nconst SEARCH_OPTIONS_TEXT = [\r\n  \"검색어를 입력해주세요\",\r\n  \"닉네임을 입력해주세요\",\r\n  \"제목을 입력해주세요\",\r\n];\r\n\r\n\r\nconst AdminFreeBoardPage = () => {\r\n  // 게시물 이동\r\n  const navigate = useNavigate();\r\n  const moveToDetail = iboard => {\r\n    navigate(`/free/details?iboard=${iboard}`);\r\n  };\r\n  // 전체 자유게시판 데이터\r\n  const [freeBoardAllData, setFreeBoardAllData] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [selectedSearchOption, setSelectedSearchOption] = useState(0); // 선택된 검색 옵션 상태\r\n  const [inputValue, setInputValue] = useState(\"\"); // 검색어 상태\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\"); // 검색어 상태\r\n\r\n  const successFn = res => {\r\n    setFreeBoardAllData(res);\r\n    console.log(\"성공했을때\", res);\r\n  };\r\n  const errorFn = res => {\r\n    console.log(\"실패\", res);\r\n    alert(`${res.message} \\n 에러코드(${res.errorCode})`);\r\n  };\r\n\r\n// 페이지네이션\r\nconst handlePageChange = _tempPage => {\r\n  setPage(_tempPage);\r\n  getFreeBoard(\r\n    _tempPage,\r\n    successFn, \r\n    errorFn, \r\n    selectedSearchOption, \r\n    inputValue,\r\n    sortType\r\n    );\r\n};\r\n  \r\n  const handleSearchOptionChange = e => {\r\n  const selectedOption = e.target.value;\r\n  setSelectedSearchOption(selectedOption);\r\n  if (selectedOption === \"전체\") {\r\n    // 전체 옵션이 선택된 경우에는 모든 데이터를 요청합니다.\r\n    getFreeBoard(1, successFn, errorFn);\r\n    setSearchKeyword(\"\");\r\n    setInputValue(\"\");\r\n  }\r\n}\r\n\r\n  const handleSearchKeywordChange = e => setInputValue(e.target.value);\r\n\r\n  const handleSearchSubmit = () => {\r\n    getFreeBoard(1, successFn, errorFn, selectedSearchOption, inputValue);\r\n    setSearchKeyword(inputValue);\r\n    setPage(1);\r\n  };\r\n \r\n  \r\n  // 게시글 삭제\r\n  const handleClickDelete = async iboard => {\r\n    const confirmDelete = window.confirm(\"해당 게시물을 삭제하시겠습니까?\");\r\n    if (confirmDelete) {\r\n    try {\r\n      const reason = 1;\r\n      const res = await deleteFreeBoard(iboard, reason, errorFn);\r\n      getFreeBoard(\r\n        page,\r\n        successFn,\r\n        errorFn,\r\n        selectedSearchOption,\r\n        inputValue,\r\n      );\r\n      setSearchKeyword(inputValue);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  };\r\n\r\n  const [sortType, setSortType] = useState();\r\n  const getSortedData = newSortType => {\r\n    setSortType(newSortType); // 정렬 상태 변경\r\n    getFreeBoard(\r\n      1, // 첫 페이지부터 데이터를 가져옴\r\n      successFn,\r\n      errorFn,\r\n      selectedSearchOption,\r\n      inputValue,\r\n      newSortType // 변경된 정렬 상태를 함께 전달\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"인풋밸류\", inputValue, \"서치키워드\", searchKeyword);\r\n  }, [inputValue, searchKeyword]);\r\n  useEffect(() => {\r\n    getFreeBoard(page, successFn, errorFn);\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <BoardWrap>\r\n        <HeaderWrap>\r\n            <div className='header-title'>\r\n                <div className='title'>자유 게시판</div>\r\n                <div className='total'>총 {freeBoardAllData.totalBoardCount}개</div>\r\n            </div>\r\n            <div className=\"search-wrap\">\r\n            <select\r\n              onChange={handleSearchOptionChange}\r\n              value={selectedSearchOption}\r\n            >\r\n              {SEARCH_OPTIONS.map((option, index) => (\r\n                <option key={option} value={index}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <input\r\n            type=\"text\"\r\n            placeholder={SEARCH_OPTIONS_TEXT[selectedSearchOption]}\r\n            value={inputValue}\r\n            onChange={handleSearchKeywordChange}\r\n            // disabled={selectedSearchOption === 0}\r\n          />\r\n            <button onClick={handleSearchSubmit} type=\"submit\">\r\n              <img src=\"/images/admin/bt_search.svg\" />\r\n            </button>\r\n        </div>\r\n            <div className=\"bt-wrap\">\r\n              <div>\r\n                <button onClick={() => getSortedData(0)}>최신순</button>\r\n                <img src=\"/images/admin/line.svg\" />\r\n                <button onClick={() => getSortedData(1)}>조회순</button>\r\n              </div>\r\n            </div>\r\n        </HeaderWrap>\r\n      <table style={{ width: \"100%\"}}>\r\n      <thead\r\n            style={{height: \"50px\", background: \"#FFE6E6\", fontSize: \"16px\" }}\r\n          >\r\n            <tr>\r\n              <th>게시글 번호</th>\r\n              <th>제목</th>\r\n              <th>작성자</th>\r\n              <th>조회수</th>\r\n              <th>등록일</th>\r\n              <th>게시글 조회</th>\r\n              <th>게시글 관리</th>\r\n            </tr>\r\n          </thead>\r\n          {freeBoardAllData && \r\n            freeBoardAllData.boards && \r\n            freeBoardAllData.boards.map((item, index) => (\r\n            <React.Fragment key={index}>\r\n            <tbody\r\n              key={item.id}\r\n              style={{\r\n                fontSize: \"16px\",\r\n                background: index % 2 === 1 ? \"#FFF7F7\" : \"inherit\",\r\n              }}\r\n              >\r\n              <tr className='board-data'>\r\n                <td>{item.iboard}</td>\r\n                <td>{item.title}</td>\r\n                <td>{item.nick}</td>\r\n                <td>{item.view}</td>\r\n                <td>{new Date(item.createdAt).toLocaleString()}</td>                <td>{item.postInquiry}\r\n                <td>{item.postManage}</td>\r\n                  <button className='move' onClick={() => moveToDetail(item.iboard)}>이동</button>\r\n                </td>\r\n                <td>{item.productManage}\r\n                  <button className='delete' onClick={e => {handleClickDelete(item.iboard)}}>삭제</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            </React.Fragment>\r\n            ))}\r\n      </table>\r\n      <div>\r\n      <PaginationContent\r\n          current={page}\r\n          onChange={handlePageChange}\r\n          total={freeBoardAllData.totalBoardCount}\r\n          pageSize={12}\r\n          style={{paddingTop: \"30px\"}}\r\n        />\r\n      </div>\r\n    </BoardWrap>\r\n  )\r\n}\r\n\r\nexport default AdminFreeBoardPage;","import styled from \"@emotion/styled\";\r\n\r\nconst AdminChatHistoryModal = ({ toggleModal }) => {\r\n  return (\r\n    <>\r\n      <ModalOverlay onClick={toggleModal} />\r\n      {ModalContainer && (\r\n        <ModalContainer>\r\n        <div className=\"modal-content\">\r\n          <h2>신고된 채팅 내역</h2>\r\n          <div className=\"chat-wrap\">\r\n            <div className=\"admin-profile-wrap\">\r\n              <div className=\"admin-chat-content\">안녕하세요.</div>\r\n              <div className=\"profile-wrap\">\r\n                <div className=\"admin-profile\">\r\n                  <img src=\"/images/admin/admin_profile.png\" />\r\n                </div>\r\n                <div className=\"user-nick\">ADMIN</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"user-profile-wrap\">\r\n              <div className=\"profile-wrap\">\r\n                <div className=\"user-profile\">\r\n                  <img src=\"/images/kong.jpg\" />\r\n                </div>\r\n                <div className=\"user-nick\">USER</div>\r\n              </div>\r\n              <div className=\"user-chat-content\">제품이 사진과 달라서 허위매물 신고합니다.</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <div className=\"close-modal-wrap\">\r\n            <button className=\"close-modal\" onClick={toggleModal}>\r\n              <div className=\"close-text\">닫기</div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </ModalContainer>\r\n      )}\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nconst ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5); /* 반투명한 검은색 배경 */\r\n  z-index: 998; /* 모달보다 작은 값으로 설정하여 모달 뒤로 숨김 */\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  border: 2px solid #777;\r\n  border-radius: 20px;\r\n  width: 600px;\r\n  height: 650px;\r\n  background-color: #fff;\r\n  z-index: 999;\r\n  padding-top: 20px;\r\n  .user-nick {\r\n    margin-top: 3px;\r\n  }\r\n  .profile-wrap {\r\n    display: block;\r\n  }\r\n  .admin-profile-wrap {\r\n    position: absolute;\r\n    width: 500px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    top: 50px;\r\n    right: 20px;\r\n    .admin-profile {\r\n      width: 50px;\r\n      height: 50px;\r\n      border: 1px solid #777;\r\n      border-radius: 25px;\r\n      margin-left: 20px;\r\n    }\r\n    .admin-profile > img {\r\n      width: 48px;\r\n      height: 48px;\r\n      border-radius: 25px;\r\n    }\r\n  }\r\n  .admin-chat-content {\r\n    top: 50px;\r\n    right: 80px;\r\n    width: 450px;\r\n    height: 50px;\r\n    border: 1px solid #777;\r\n    border-radius: 10px;\r\n    background-color: #ffe6e6;\r\n    font-size: 17px;\r\n  \r\n  }\r\n  .user-profile-wrap {\r\n    position: absolute;\r\n    width: 500px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    top: 120px;\r\n    left: 20px;\r\n    .user-profile {\r\n      width: 50px;\r\n      height: 50px;\r\n      border: 1px solid #777;\r\n      border-radius: 25px;\r\n      margin-right: 20px;\r\n    }\r\n    .user-profile > img {\r\n      width: 50px;\r\n      height: 50px;\r\n      border-radius: 25px;\r\n    }\r\n  }\r\n  .user-chat-content {\r\n    top: 120px;\r\n    left: 80px;\r\n    width: 450px;\r\n    height: 50px;\r\n    border: 1px solid #777;\r\n    border-radius: 10px;\r\n  }\r\n  .close-modal-wrap {\r\n    position: absolute;\r\n    justify-content: center;\r\n    bottom: 20px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    .close-modal {\r\n      width: 60px;\r\n      height: 30px;\r\n      font-size: 15px;\r\n      border: 1px solid #c14b45;\r\n      border-radius: 5px;\r\n      background-color: #c14b45;\r\n      .close-text {\r\n        color: #fff;\r\n      }\r\n      .close-text:hover {\r\n        color: #111;\r\n      }\r\n    }\r\n    .close-modal:hover {\r\n      background-color: #fff;\r\n      border: 1.5px solid #777;\r\n    }\r\n  }\r\n`;\r\nexport default AdminChatHistoryModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BoardWrap, HeaderWrap } from \"../../styles/admin/AdminBoardPageStyle\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport { Modal } from \"../../styles/admin/AdminChatHistoryStyle\";\r\nimport { getChatHistory } from \"../../api/admin/admin_board_api\";\r\nimport { PaginationContent } from \"../../styles/admin/AdminReportPageStyle\";\r\nimport AdminChatHistoryModal from \"../../components/admin/AdminChatHistoryModal\";\r\n\r\nconst chatData = {\r\n  totalChatCount: 124,\r\n  chats: [\r\n    {\r\n      ichat: 222,\r\n      category: \"사기\",\r\n      nick: \"우헤헹\",\r\n      createdAt: \"2024-02-28T06:28:38.904Z\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst initChatData = {\r\n  totalChatCount: 0,\r\n  chats: [\r\n    {\r\n      ichat: 0,\r\n      category: \"string\",\r\n      nick: \"string\",\r\n      createdAt: \"2024-02-28T06:28:38.904Z\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst AdminChatHistoryPage = () => {\r\n  // 채팅 내역 데이터\r\n  const [chatHistoryData, setChatHistoryData] = useState({});\r\n  console.log(\"chatHistoryData\", chatHistoryData);\r\n\r\n  const [page, setPage] = useState(1);\r\n  // const [limit, setLimit] = useState(5);\r\n  // const [selectedSearchOption, setSelectedSearchOption] = useState(\"전체\"); // 선택된 검색 옵션 상태\r\n  // const [searchKeyword, setSearchKeyword] = useState(\"\"); // 검색어 상태\r\n  const getLength = function () {\r\n    return chatHistoryData.length;\r\n  };\r\n  // const totalPage = Math.ceil(getLength() / limit);\r\n\r\n  function handlePageChange(value) {\r\n    if (value === \"&laquo;\") {\r\n      setPage(1);\r\n    } else if (value === \"&lsaquo;\") {\r\n      if (page !== 1) {\r\n        setPage(page - 1);\r\n      }\r\n    } else if (value === \"&rsaquo;\") {\r\n      if (page !== totalPage) {\r\n        setPage(page + 1);\r\n      }\r\n    } else if (value === \"&raquo;\") {\r\n      setPage(totalPage);\r\n    } else {\r\n      setPage(value);\r\n    }\r\n  }\r\n\r\n  // 모달창\r\n  const [modal, setModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState({});\r\n  const toggleModal = content => {\r\n    setModalContent(content); // 모달에 표시할 내용 업데이트\r\n    setModal(!modal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChatHistory(page, successFn, errorFn);\r\n  }, [page]);\r\n\r\n  const successFn = res => {\r\n    console.log(\"성공했을때\", res);\r\n    setChatHistoryData(res);\r\n    console.log(res);\r\n  };\r\n\r\n  const errorFn = res => {\r\n    console.log(\"실패\", res);\r\n    alert(`${res.message} \\n 에러코드(${res.errorCode})`);\r\n  };\r\n\r\n  return (\r\n    <BoardWrap>\r\n      <HeaderWrap>\r\n        <div className=\"header-title\">\r\n          <div className=\"title\">신고 채팅 내역</div>\r\n          <div className=\"total\">총 {chatHistoryData.totalChatCount}개</div>\r\n        </div>\r\n      </HeaderWrap>\r\n\r\n      <table style={{ width: \"100%\" }}>\r\n        <thead\r\n          style={{ height: \"50px\", background: \"#FFE6E6\", fontSize: \"16px\" }}\r\n        >\r\n          <tr>\r\n            <th>번호</th>\r\n            <th>카테고리</th>\r\n            <th>닉네임</th>\r\n            <th>등록일</th>\r\n            <th>내역 관리</th>\r\n          </tr>\r\n        </thead>\r\n        {chatHistoryData &&\r\n          chatHistoryData.chats &&\r\n          chatHistoryData.chats.map((item, index) => (\r\n            <>\r\n              <tbody\r\n                key={item.id}\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  background: index % 2 === 1 ? \"#FFF7F7\" : \"inherit\",\r\n                }}\r\n              >\r\n                <tr className=\"board-data\">\r\n                  <td>{item.ichat}</td>\r\n                  <td>{item.category}</td>\r\n                  <td>{item.nick}</td>\r\n                  <td>{new Date(item.createdAt).toLocaleString()}</td>\r\n                  <td>\r\n                    {item.productInquiry}\r\n                    <div>\r\n                      <button\r\n                        className=\"move\"\r\n                        onClick={() => toggleModal(item)}\r\n                      >\r\n                        내용\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </>\r\n          ))}\r\n      </table>\r\n      {modal && (\r\n        <AdminChatHistoryModal toggleModal={toggleModal} className={modal} \r\n        // data={res.data} \r\n        />\r\n      )}\r\n      <div>\r\n        <PaginationContent\r\n          current={page}\r\n          onChange={handlePageChange}\r\n          total={chatHistoryData.totalChatCount}\r\n          pageSize={12}\r\n          style={{paddingTop: \"30px\"}}\r\n        />\r\n      </div>\r\n    </BoardWrap>\r\n  );\r\n};\r\n\r\nexport default AdminChatHistoryPage;\r\n","import styled from '@emotion/styled';\r\nimport React from 'react'\r\n\r\nconst AdminCateDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 3.3rem;\r\n  width: 135px;\r\n  height: 482px;\r\n`;\r\n\r\nconst AdminCateUl = styled.ul`\r\n  display: block;\r\n  height: 104px;\r\n  border-radius: 3px;\r\n  p {\r\n    color: #000;\r\n    font-size: 1.8rem;\r\n    line-height: 2.2;\r\n    background-color: #FFD4D4;\r\n    padding-left: 1.8rem;\r\n  }\r\n`;\r\n\r\nconst AdminCateLi = styled.li`\r\n  color: ${props => (props.selected ? \"#C14B45\" : \"#777777\")};\r\n  font-weight: ${props => (props.selected ? \"500\" : \"400\")};\r\n  font-size: 1.6rem;\r\n  line-height: 1.9;\r\n  padding-left: 1.8rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst AdminCategory = ({selectedItem, adminCate, onSubItemClick}) => {\r\n  return (\r\n    <AdminCateDiv>\r\n      {adminCate.map(item => (\r\n        <AdminCateUl key={item.title}>\r\n          <p>{item.title}</p>\r\n          {item.list.map(subItem => (\r\n            <AdminCateLi\r\n              key={subItem}\r\n              selected={selectedItem === subItem}\r\n              onClick={() => {\r\n                onSubItemClick(subItem);\r\n              }}\r\n            >\r\n              {subItem}\r\n            </AdminCateLi>\r\n          ))}\r\n        </AdminCateUl>\r\n      ))}\r\n    </AdminCateDiv>\r\n  )\r\n}\r\n\r\nexport default AdminCategory","import styled from \"@emotion/styled\";\r\n\r\nexport const AdminTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: end;\r\n  width: 1260px;\r\n  padding: 17px 0;\r\n  border-bottom: 1px solid #c14b45;\r\n  margin-bottom: 33px;\r\n  h1 {\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport React from 'react';\r\n\r\nconst MyModalDiv = styled.div`\r\n     position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 1000;\r\n\r\n    width: 300px;\r\n    height: 180px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 30px;\r\n    border-radius: 10px;\r\n    border: 1px solid #2c39b5;\r\n    background: #fff;\r\n    p {\r\n      color: #000;\r\n      text-align: center;\r\n      font-size: 20px;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      line-height: normal;\r\n    }\r\n    div {\r\n        display: flex;\r\n        gap: 20px;\r\n        :nth-of-type(1) {\r\n            position: absolute;\r\n            top: 10px;\r\n            right: 10px;\r\n            img {\r\n                width: 25px;\r\n                height: 25px;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n    }\r\n`\r\nexport const Confirm = styled.button`\r\n    width: 80px;\r\n    height: 40px;\r\n    border-radius: 5px;\r\n    border: none;\r\n    background: #2c39b5;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    font-size: 20px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n`\r\nexport const Cancel = styled(Confirm)`\r\n    background-color: #fff;\r\n    color: #2c39b5;\r\n    border: 2px solid #2c39b5;\r\n`\r\n\r\nconst AdminReserve = ({ txt,onCancel, onConfirm, onClose }) => {\r\n  return (\r\n    <MyModalDiv>\r\n      <p>{txt}</p>\r\n      <div>\r\n        <img src=\"/images/admin/bt_close.svg\" onClick={onClose}></img>\r\n      </div>\r\n      <div>\r\n        <Cancel onClick={onCancel}>거절</Cancel>\r\n        <Confirm onClick={onConfirm}>수락</Confirm>\r\n      </div>\r\n    </MyModalDiv>\r\n  );\r\n};\r\n\r\nexport default AdminReserve;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  PaginationContent,\r\n  ReportMain,\r\n  ReportTitle,\r\n} from \"../../styles/admin/AdminReportPageStyle\";\r\nimport { ModalBackground } from \"../../components/joinpopup/JoinPopUp\";\r\nimport { deleteIrefund, getAdminReserve } from \"../../api/admin/admin_reserve_api\";\r\nimport AdminReserve from \"../../components/admin/AdminReserve\";\r\n\r\nconst accidentCate = [\r\n  {\r\n    id: \"\",\r\n    title: \"전체\",\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"처리됨\",\r\n  },\r\n  {\r\n    id: 0,\r\n    title: \"대기중\",\r\n  },\r\n  {\r\n    id: -1,\r\n    title: \"반려됨\",\r\n  },\r\n];\r\n\r\nconst AdminReservePage = ({ activeBtn }) => {\r\n  const [reserveList, setReserveList] = useState([]);\r\n  const [reserveLength, setReserveLength] = useState([]);\r\n  const [state, setState] = useState(null);\r\n  const [showModal,setShowModal] = useState(false);\r\n  const [itemToDelete, setItemToDelete] = useState();\r\n  const [page, setPage] = useState(1);\r\n\r\n  const handlePageChange = _tempPage => {\r\n    setPage(_tempPage);\r\n  };\r\n\r\n  const reserveListData = async () => {\r\n    await getAdminReserve(\r\n    page,\r\n    state,\r\n    setReserveList,\r\n    setReserveLength,\r\n    );\r\n  };\r\n    \r\n  useEffect(() => {\r\n    reserveListData();\r\n  }, [page, state]);\r\n\r\n    const handleSatus = (irefund) => {\r\n      setShowModal(true);\r\n      setItemToDelete(irefund);\r\n    }\r\n\r\n    const handleCancel = async () => {\r\n      if (itemToDelete) {\r\n        await handleReserveButton(itemToDelete, -1);\r\n        setShowModal(false);\r\n      }\r\n    };\r\n    const handleConfirm = async () => {\r\n      if (itemToDelete) {\r\n        await handleReserveButton(itemToDelete, 1);\r\n        setShowModal(false);\r\n      }\r\n    };\r\n\r\n    const handleReserveButton = async (irefund,div) => {\r\n      try {\r\n        const deleteReserve = await deleteIrefund(irefund,div);\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error deleteIrefund:\", error);\r\n      }\r\n      reserveListData();\r\n    };\r\n\r\n    const closeModal = () => {\r\n      setShowModal(false);\r\n    }\r\n\r\n    const formatNumberWithCommas = (number) => {\r\n      return number.toLocaleString();\r\n    };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <>\r\n        <AdminReserve onCancel={handleCancel} onConfirm={handleConfirm} onClose={closeModal}\r\n        txt={\r\n          <>\r\n            이 내역을  <br />\r\n            환불하시겠습니까?\r\n          </>\r\n        }/>\r\n        <ModalBackground></ModalBackground>\r\n        </>\r\n      )}\r\n      <ReportTitle>\r\n        <h1>{activeBtn}</h1>\r\n        <div style={{ display: \"flex\", gap: \"20px\", alignItems: \"center\" }}>\r\n          <select onChange={e => setState(e.target.value)} defaultValue=\"\">\r\n            <option value=\"\" disabled hidden>\r\n              상태 선택\r\n            </option>\r\n            {accidentCate.map(item => {\r\n              return (\r\n                <option key={item.id} value={item.id}>\r\n                  {item.title}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </ReportTitle>\r\n      <ReportMain>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>번호</th>\r\n              <th>아이디</th>\r\n              <th>닉네임</th>\r\n              <th>취소일자</th>\r\n              <th>환불금액</th>\r\n              <th>상태</th>\r\n              <th>변경</th>\r\n            </tr>\r\n          </thead>\r\n          {reserveList.map((item, index) => (\r\n            <tbody\r\n              key={item.refunds}\r\n              style={{\r\n                backgroundColor: index % 2 === 0 ? \"inherit\" : \"#FFF7F7\",\r\n              }}\r\n            >\r\n              <tr>\r\n                <td>{index+1}</td>\r\n                <td>{item.uid}</td>\r\n                <td>{item.nick}</td>\r\n                <td>{new Date(item.createdAt).toLocaleString()}</td>\r\n                <td>{formatNumberWithCommas(item.amount)} 원</td>\r\n                <td>\r\n                  {item.status === 1\r\n                    ? \"처리됨\"\r\n                    : item.status === 0\r\n                    ? \"대기중\"\r\n                    : item.status === -1\r\n                    ? \"반려됨\"\r\n                    : \"\"}\r\n                </td>\r\n                <td>{item.status === 1 && item.status === -1\r\n                    ? \"\"\r\n                    : item.status === 0\r\n                    ? <button onClick={() => handleSatus(item.irefund)}>\r\n                        확인\r\n                      </button>\r\n                    : \"확인(완)\"}\r\n                  \r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ))}\r\n        </table>\r\n      </ReportMain>\r\n      <div style={{ margin: \"0 auto\" }}>\r\n        <PaginationContent\r\n          current={page}\r\n          onChange={handlePageChange}\r\n          total={reserveLength}\r\n          pageSize={12}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminReservePage;\r\n","import { jwtAxios } from \"../../util/jwtUtil\";\r\nimport { SERVER_URL } from \"../config\";\r\n\r\nexport const getAdminReserve = async (\r\n    page,\r\n    state,\r\n    setReserveList,\r\n    setReserveLength,\r\n  ) => {\r\n    try {\r\n      let url = `${SERVER_URL}/api/admin/refund?page=${page}`\r\n      if (state!==null) {\r\n        url += `&status=${state}`;\r\n      }\r\n      const res = await jwtAxios.get(url);\r\n      setReserveList([...res.data.refunds]);\r\n      setReserveLength(res.data.totalRefundCount)\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deleteIrefund = async (irefund,div) => {\r\n    try {\r\n        const url = `${SERVER_URL}/api/admin/refund/${irefund}?div=${div}`\r\n        const res = await jwtAxios.delete(url);\r\n        return res.data;\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport AdminMemberPage from \"./AdminMemberPage\";\r\nimport AdminReportPage from \"./AdminReportPage\";\r\nimport AdminBoardPage from \"./AdminBoardPage\";\r\nimport AdminFreeBoardPage from \"./AdminFreeBoardPage\";\r\nimport AdminChatHistoryPage from \"./AdminChatHistoryPage\";\r\nimport styled from \"@emotion/styled\";\r\nimport AdminCategory from \"../../components/admin/AdminCategory\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { LoginState } from \"../../styles/header/HeaderStyle\";\r\nimport { DivisionLine } from \"../../styles/login/LoginPageStyle\";\r\nimport { AdminTitle } from \"../../styles/admin/AdminPageStyle\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport AdminReservepage from \"./AdminReservepage\";\r\n\r\nconst AllWidth = styled.div`\r\n  width: 1260px;\r\n  margin: 0 auto;\r\n`;\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  margin-bottom: 9rem;\r\n  > div:nth-of-type(2) {\r\n    width: 1090px;\r\n    margin-left: 35px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 3.3rem;\r\n  }\r\n`;\r\n\r\nconst AdminPage = () => {\r\n  const [activeBtn, setActiveBtn] = useState(\"개인 회원\");\r\n  const [selectedItem, setSelectedItem] = useState(\"개인 회원\");\r\n  const adminCate = [\r\n    {\r\n      title: \"회원 조회\",\r\n      name: [\"individual\", \"enterprise\"],\r\n      list: [\"개인 회원\"],\r\n    },\r\n    {\r\n      title: \"신고 내역\",\r\n      name: [\"conflict\", \"accident\"],\r\n      list: [\"분쟁 신고\", \"사고 신고\"],\r\n    },\r\n    {\r\n      title: \"게시판 내역\",\r\n      name: [\"prod\", \"free\"],\r\n      list: [\"상품 게시판\", \"자유 게시판\"],\r\n    },\r\n    {\r\n      title: \"내역 관리\",\r\n      name: [\"chat\",\"reserve\"],\r\n      list: [\"신고 채팅 내역\",\"예약 취소 내역\"],\r\n    },\r\n  ];\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  // 로그아웃\r\n  const { moveToPath, isLogin, doLogout } = useCustomLogin();\r\n  const handleLogout = () => {\r\n    doLogout();\r\n    moveToPath(\"/\");\r\n  };\r\n\r\n  // 메인페이지로 이동\r\n  const handleMain = () => {\r\n    navigate(`/`);\r\n  };\r\n\r\n  // AdminCate 상태 변경\r\n  useEffect(() => {\r\n    const storedItem = sessionStorage.getItem(\"selectedItem\");\r\n    if (storedItem && storedItem !== selectedItem) {\r\n      setSelectedItem(storedItem);\r\n      setActiveBtn(storedItem);\r\n    } else {\r\n      const params = new URLSearchParams(location.search);\r\n      const item = params.get(\"item\") || selectedItem;\r\n      setSelectedItem(item);\r\n      setActiveBtn(item);\r\n    }\r\n  }, [location.search, selectedItem]);\r\n\r\n  const handleSubItemClick = subItem => {\r\n    setSelectedItem(subItem);\r\n    setActiveBtn(subItem);\r\n    const selectedCategory = adminCate.find(category =>\r\n      category.list.includes(subItem),\r\n    );\r\n\r\n    if (selectedCategory) {\r\n      const selectedName = selectedCategory.name.find(name => {\r\n        return (\r\n          (name === \"individual\" && subItem === \"개인 회원\") ||\r\n          (name === \"conflict\" && subItem === \"분쟁 신고\") ||\r\n          (name === \"accident\" && subItem === \"사고 신고\") ||\r\n          (name === \"prod\" && subItem === \"상품 게시판\") ||\r\n          (name === \"free\" && subItem === \"자유 게시판\") ||\r\n          (name === \"chat\" && subItem === \"신고 채팅 내역\") || \r\n          (name === \"reserve\" && subItem === \"예약 취소 내역\")\r\n        );\r\n      });\r\n\r\n      if (selectedName) {\r\n        navigate(`/admin?${selectedName}`, {\r\n          state: { selectedItem: subItem },\r\n        });\r\n        sessionStorage.setItem(\"selectedItem\", subItem);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AllWidth>\r\n      <div>\r\n        <AdminTitle>\r\n          <h1>관리자 페이지</h1>\r\n          <LoginState>\r\n            <button onClick={handleLogout}>로그아웃</button>\r\n            <DivisionLine color=\"#C14B45\"></DivisionLine>\r\n            <button onClick={handleMain}>메인페이지</button>\r\n          </LoginState>\r\n        </AdminTitle>\r\n        <Flex>\r\n          <AdminCategory\r\n            adminCate={adminCate}\r\n            selectedItem={selectedItem}\r\n            onSubItemClick={handleSubItemClick}\r\n          />\r\n          <div>\r\n            {activeBtn === \"개인 회원\" && (\r\n              <AdminMemberPage\r\n                activeBtn={activeBtn}\r\n              />\r\n            )}\r\n            {activeBtn === \"분쟁 신고\" || activeBtn === \"사고 신고\" ? (\r\n              <AdminReportPage\r\n                activeBtn={activeBtn}\r\n              />\r\n            ) : null}\r\n            {activeBtn === \"상품 게시판\" && <AdminBoardPage />}\r\n            {activeBtn === \"자유 게시판\" && <AdminFreeBoardPage />}\r\n            {activeBtn === \"신고 채팅 내역\" && <AdminChatHistoryPage />}\r\n            {activeBtn === \"예약 취소 내역\" && <AdminReservepage activeBtn={activeBtn} />}\r\n          </div>\r\n        </Flex>\r\n      </div>\r\n    </AllWidth>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import styled from \"@emotion/styled\";\r\n// 헤더\r\nexport const HeaderStyle = styled.div`\r\n  position: fixed;\r\n  z-index: 100;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #fff;\r\n  width: 100vw;\r\n  text-align: center;\r\n  padding-bottom: 15px;\r\n  height: 155px;\r\n`;\r\nexport const HeaderTop = styled.div`\r\n  margin: 30px auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 1300px;\r\n`;\r\nexport const HeaderLogo = styled.img`\r\n  width: 90px;\r\n  height: 60px;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n`;\r\nexport const SearchForm = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  width: 640px;\r\n  height: 60px;\r\n  align-items: center;\r\n  border-radius: 80px;\r\n  border: 1px solid #2c39b5;\r\n  input {\r\n    width: 350px;\r\n    height: 58px;\r\n    padding-left: 20px;\r\n  }\r\n  input:hover {\r\n    width: 350px;\r\n    background-color: #eee;\r\n    border-radius: 45px;\r\n  }\r\n  select {\r\n    width: 120px;\r\n    height: 22px;\r\n    font-size: 12px;\r\n    border: 1px solid #2c39b5;\r\n  }\r\n`;\r\n\r\nexport const SearchDiv = styled.div`\r\n    width: 290px;\r\n    height: 58px;\r\n    :hover {\r\n      background-color: #eee;\r\n      border-radius: 45px;\r\n    }\r\n    b {\r\n    display: flex;\r\n    height: 50%;\r\n    font-size: 16px;\r\n    color: #777;\r\n    font-weight: 400;\r\n    padding-top: 10px;\r\n    padding-left: 25px;\r\n    }\r\n    >div {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 5px;\r\n      height: 50%;\r\n      padding-left: 25px;\r\n      p {\r\n        display: block;\r\n        content: \"\";\r\n        width: 1px;\r\n        height: 10px;\r\n        background: #2c39b5;\r\n      }\r\n      span {\r\n        line-height: 1.6;\r\n        font-size: 12px;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n`\r\n\r\nexport const SearchWord = styled.input`\r\n  display: flex;\r\n  width: 350px;\r\n  height: 60px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  flex-shrink: 0;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: rgb(0, 0, 0);\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  line-height: 24px; /* 80% */\r\n  letter-spacing: 0.5px;\r\n`;\r\nexport const SearchDivisionLine = styled.div`\r\nwidth: 1px;\r\nheight: 26px;\r\nbackground: #eee;\r\n`;\r\nexport const SearchBt = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 100%;\r\n  flex-shrink: 0;\r\n  border: none;\r\n  background-image: url(\"/images/header/bt_search.svg\");\r\n  cursor: pointer;\r\n`;\r\nexport const LoginState = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 200px;\r\n  height: 20px;\r\n  justify-content: space-between;\r\n  button {\r\n    width: 80px;\r\n    background: transparent;\r\n    border: none;\r\n    color: #777;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 16px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const HeaderMenu = styled.div`\r\n  margin: 0 auto;\r\n  width: 1300px;\r\n  display: flex;\r\n  gap: 40px;\r\n  ul {\r\n    gap: 40px;\r\n    display: flex;\r\n    list-style: none;\r\n  }\r\n  li {\r\n    color: #4b4b4b;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 16px;\r\n  }\r\n`;\r\nexport const HeaderMainMenu = styled.div`\r\n  display: block;\r\n  width: 35px;\r\n  height: 35px;\r\n  img {\r\n    padding: 7px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n// 카테고리 메뉴창\r\nexport const CategoryTab = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n`;\r\nexport const MainCate = styled.div`\r\n  width: 100px;\r\n`;\r\nexport const MainCateTitle = styled.li`\r\n  height: 30px;\r\n  width: 85px;\r\n  margin: 0 auto 5px;\r\n  padding-top: 6px;\r\n  cursor: pointer;\r\n`;\r\nexport const SubCate = styled.div`\r\n  display: block;\r\n  border: 1px solid #2c39b5;\r\n  width: 100px;\r\n  padding-top: 10px;\r\n  background: #fff;\r\n  li {\r\n    margin-bottom: 10px;\r\n    padding: 7px 0;\r\n    color: #777;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const CateHover = styled.div`\r\n  display: block;\r\n  position: absolute;\r\n  top: 70px;\r\n  right: 20px;\r\n  border: 1px solid #2c39b5;\r\n  width: 245px;\r\n  height: 90px; \r\n  padding: 15px;\r\n  background: #fff;\r\n  div {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-bottom: 20px;\r\n    h1 {\r\n      font-size: 12px;\r\n      font-weight: 400;\r\n      color: #777;\r\n    }\r\n  }\r\n`\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LoginPageStyle = styled.div`\r\n  width: 1300px;\r\n  /* text-align: center; */\r\n  margin: 0 auto;\r\n  /* background: skyblue; */\r\n  padding-bottom: 120px;\r\n`;\r\nexport const LogoZone = styled.div`\r\nwidth: 100%;\r\ntext-align: center;\r\n`;\r\nexport const Logo = styled.img`\r\n  margin: 0px auto 30px auto;\r\n  width: 80px;\r\n  height: 60px;\r\n  background-color: transparent;\r\n`;\r\nexport const LoginBox = styled.div`\r\n  margin: 0 auto;\r\n  /* box-sizing: border-box; */\r\n  width: 450px;\r\n  height: ${props => (props.height ? props.height : \"540px\")};\r\n  /* height: 540px; */\r\n  border-radius: 10px;\r\n  border: 1px solid #2c39b5;\r\n  padding-left: 30px;\r\n  p {\r\n    margin-top: 50px;\r\n    margin-bottom: ${props => (props.mgbtm ? props.mgbtm : \"160px\")};\r\n\r\n    color: #000;\r\n    font-family: KyivType Sans;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 350;\r\n    line-height: normal;\r\n  }\r\n  li {\r\n    position: relative;\r\n    cursor: pointer;\r\n\r\n    color: #000;\r\n    font-family: KyivType Sans;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n  \r\n`;\r\nexport const IdBox = styled.input`\r\n  width: 390px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  border: 1px solid #2c39b5;\r\n  padding-left: 20px;\r\n\r\n  color: #000;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n\r\n  margin-bottom: 10px;\r\n`;\r\nexport const PwBox = styled(IdBox)`\r\n  margin-bottom: 30px;\r\n`;\r\nexport const LoginBt = styled.button`\r\n  width: 390px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  background: #2c39b5;\r\n  margin-bottom: 20px;\r\n  border: 0;\r\n  color: #fff;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  cursor: pointer;\r\n`;\r\nexport const DivisionLine = styled.div`\r\n  width: 1px;\r\n  height: 15px;\r\n  background: ${props => (props.color ? props.color : \"#2c39b5\")};\r\n`;\r\n","import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./cookieUtil\";\r\nimport { SERVER_URL } from \"../api/config\";\r\n\r\nexport const jwtAxios = axios.create();\r\n\r\nconst beforeReq = config => {\r\n  // console.log(\"1. 요청전 전달\", config);\r\n  // console.log(\"2. 쿠키로 토큰가져오기\");\r\n  const memberInfo = getCookie(\"member\");\r\n\r\n  if (!memberInfo) {\r\n    // console.log(\"쿠키 정보 없네요.\");\r\n    return Promise.reject({ response: { data: { error: \"Login하세요.\" } } });\r\n  }\r\n  // console.log(\"3. 쿠키에서 토큰 정보를 뜯는다.\");\r\n  const { accessToken } = memberInfo;\r\n  // console.log(\"4. 엑세스토큰 정보\", accessToken);\r\n  config.headers.Authorization = `Bearer ${accessToken}`;\r\n  return config;\r\n};\r\n\r\nconst requestFail = error => {\r\n  // console.log(\"요청후 실패시\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst refreshJWT = async (accessToken, refreshToken) => {\r\n  const host = SERVER_URL;\r\n  const header = { headers: { Authorization: `Bearer ${accessToken}` } };\r\n  const res = await axios.get(\r\n    `${host}/api/user/refresh-token?refreshToken=${refreshToken}`,\r\n    header,\r\n  );\r\n  // console.log(\"1. refreshToken 토큰 요청\");\r\n  // console.log(\"2. 백엔드에서 새로 준 값\", res.data);\r\n  return res.data;\r\n};\r\n\r\nconst beforeRes = async res => {\r\n  // console.log(\"Response 전처리\", res);\r\n  const data = res.data;\r\n  // console.log(\"1. Response 오기전 서버 전달해준 데이터, data\");\r\n  if (data && data.error === \"ERROR_ACCESS_TOKEN\") {\r\n    // console.log(\"2. 일반적 오류가 아닌 엑세스 토큰 에러입니다.\");\r\n    // console.log(\"3. 새로운 토큰을 요청해야 합니다.\");\r\n    // console.log(\"4. 쿠키에 있는 정보를 읽어서 다시 시도합니다.\");\r\n    const memberInfo = getCookie(\"member\");\r\n    // console.log(\"5. 쿠키 토큰 정보 AccessToken\", memberInfo.accessToken);\r\n    // console.log(\"6. 쿠키 토큰 정보 RefreshToken\", memberInfo.refreshToken);\r\n    // console.log(\"7. 위의 정보로 새로운 토큰을 요청합니다.\");\r\n    const result = await refreshJWT(\r\n      memberInfo.accessToken,\r\n      memberInfo.refreshToken,\r\n    );\r\n    // console.log(\"8. 요청 이후 되돌아와서 새로운 정보로 쿠키를 업데이트\");\r\n    (memberInfo.accessToken = result.accessToken),\r\n      (memberInfo.refreshToken = result.refreshToken),\r\n      setCookie(\"member\", JSON.stringify(memberInfo));\r\n\r\n    // console.log(\"9. 데이터 요청하던 API 재요청\");\r\n    const originalRequest = res.config;\r\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`;\r\n    return await axios(originalRequest);\r\n  }\r\n  return res;\r\n};\r\n\r\nconst responseFail = error => {\r\n  // console.log(\"Response Fail Err\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\njwtAxios.interceptors.request.use(beforeReq, requestFail);\r\njwtAxios.interceptors.response.use(beforeRes, responseFail);\r\n"],"names":["ModalBackground","styled","div","_templateObject","_taggedTemplateLiteral","_ref","txt","onConfirm","JoinPopUp","_templateObject2","_jsxs","children","_jsx","onClick","useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","sessionStorage","getItem","doLogin","async","loginParam","successFn","failFn","errorFn","loginPostAsync","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","Navigate","to","userAuth","concat","SERVER_URL","ReportTitle","ReportSearchForm","ReportSearchWord","input","_templateObject3","ReportSearchBt","button","_templateObject4","SearchOptionSelect","select","_templateObject5","MemberTitle","_templateObject6","MemberSearchWord","_templateObject7","MemberSearchForm","_templateObject8","MemberSearchBt","_templateObject9","ReportMain","_templateObject10","props","width","PaginationContent","Pagination","_templateObject11","tableHeaderStyle","padding","border","height","textAlign","backgroundColor","fontWeight","fontSize","tableCellStyle","managementButtonStyle","borderRadius","background","color","boxShadow","cursor","zIndex","activeBtn","memberData","setMemberData","useState","selectedSearchOption","setSelectedSearchOption","searchKeyword","setSearchKeyword","currentPage","setCurrentPage","useEffect","fetchData","searchTypeNumber","type","convertSearchTypeToNumber","data","page","search","status","_res$data$users","_res$data","url","jwtAxios","get","users","error","console","log","getProducts","handleMemberWithdrawal","userId","reason","reasonNumber","convertReasonToNumber","deletedUser","iuser","_res$data$user","_res$data2","delete","user","deleteUser","style","display","gap","alignItems","onChange","e","target","value","map","option","index","placeholder","borderCollapse","marginTop","member","uid","nick","Date","createdAt","toLocaleString","email","penalty","current","total","pageSize","showSizeChanger","ReportContentStyle","ContentTitle","ContentMain","BtSection","ReportYetContent","detail","onClose","Bt_No","Bt_Ok","src","className","ReportDoneContent","_ref2","stateCate","id","title","conflictCate","accidentCate","reportList","setReportList","reportLength","setReportLength","setPage","setDiv","setSearch","inputValue","setInputValue","category","setCategory","setState","reportListData","res","disputes","totalDisputeCount","getDispute","setType","idispute","setIdispute","stateData","post","postDispute","contentYetModal","setContentYetModal","contentDoneModal","setContentDoneModal","selectedDetail","setSelectedDetail","_Fragment","closeContentYetModal","handleClickNo","handleClickOk","closeContentDoneModal","defaultValue","disabled","hidden","item","reportedUserUid","reportedUserNick","reporterUid","handleClickYet","handleClickDone","margin","_tempPage","getAllProducts","sort","base_url","toString","charAt","response","getFreeBoard","BoardWrap","HeaderWrap","mainCategory","subCategory","SEARCH_OPTIONS","SEARCH_OPTIONS_TEXT","AdminBoardPage","boardAllData","setBoardAllData","alert","message","errorCode","handleClickDelete","window","confirm","iproduct","deleteProduct","sortType","setSortType","getSortedData","newSortType","handleSearchSubmit","products","React","pricePerDay","view","productInquiry","moveToDetail","productManage","paddingTop","AdminFreeBoardPage","freeBoardAllData","setFreeBoardAllData","iboard","deleteFreeBoard","totalBoardCount","selectedOption","boards","postInquiry","postManage","ModalOverlay","ModalContainer","toggleModal","AdminChatHistoryPage","chatHistoryData","setChatHistoryData","modal","setModal","modalContent","setModalContent","content","getChatHistory","totalChatCount","chats","ichat","AdminChatHistoryModal","totalPage","AdminCateDiv","AdminCateUl","ul","AdminCateLi","li","selected","selectedItem","adminCate","onSubItemClick","list","subItem","AdminTitle","MyModalDiv","Confirm","Cancel","onCancel","reserveList","setReserveList","reserveLength","setReserveLength","showModal","setShowModal","itemToDelete","setItemToDelete","reserveListData","refunds","totalRefundCount","getAdminReserve","handleReserveButton","irefund","deleteIrefund","AdminReserve","closeModal","number","amount","handleSatus","AllWidth","Flex","AdminPage","setActiveBtn","setSelectedItem","name","location","useLocation","storedItem","URLSearchParams","LoginState","handleLogout","DivisionLine","handleMain","AdminCategory","selectedCategory","find","includes","selectedName","setItem","AdminMemberPage","AdminReportPage","AdminReservepage","HeaderStyle","HeaderTop","HeaderLogo","img","SearchForm","SearchDiv","SearchWord","SearchDivisionLine","SearchBt","HeaderMenu","HeaderMainMenu","CategoryTab","_templateObject12","MainCate","_templateObject13","MainCateTitle","_templateObject14","SubCate","_templateObject15","CateHover","_templateObject16","LoginPageStyle","LogoZone","Logo","LoginBox","mgbtm","IdBox","PwBox","LoginBt","axios","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","accessToken","headers","Authorization","result","refreshToken","host","header","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}