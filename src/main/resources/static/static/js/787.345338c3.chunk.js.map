{"version":3,"file":"static/js/787.345338c3.chunk.js","mappings":"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","sources":["hooks/useCustomLogin.js","styles/header/MenuTabStyle.js","components/header/MenuTab.js","api/header/header_api.js","components/header/Header.js","styles/footer/FooterStyle.js","components/footer/Footer.js","components/SSE/fetchSSE.js","layouts/Layout.js","styles/header/HeaderStyle.js","styles/login/LoginPageStyle.js","util/jwtUtil.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { loginPostAsync, logout } from \"../slices/loginSlice\";\r\n\r\nconst useCustomLogin = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  // RTK 상태값 읽기\r\n  const loginState = useSelector(state => state.loginSlice);\r\n  // 로그인 상태값 파악\r\n  const isLogin = sessionStorage.getItem(\"isLogin\") === \"true\";\r\n  // 로그인 기능\r\n  const doLogin = async ({ loginParam, successFn, failFn, errorFn }) => {\r\n    const action = await dispatch(\r\n      loginPostAsync({ loginParam, successFn, failFn, errorFn }),\r\n    );\r\n    return action.payload;\r\n  };\r\n  // 일반유저 vs 관리자\r\n  const userAuth = sessionStorage.getItem(\"userAuth\");\r\n\r\n  // 로그아웃 기능\r\n  const doLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n  // 패스이동 기능\r\n  const moveToPath = path => {\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n  // 로그인 페이지 이동 기능\r\n  const moveToLogin = () => {\r\n    return <Navigate replace to=\"/member/login\" />;\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    doLogin,\r\n    doLogout,\r\n    moveToPath,\r\n    moveToLogin,\r\n    userAuth,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import styled from \"@emotion/styled\";\r\n\r\n// 메인 메뉴창\r\nexport const MenuTabStyle = styled.div`\r\n  position: fixed;\r\n  display: block;\r\n  z-index: 100;\r\n  top: 155px;\r\n  width: 540px;\r\n  height: 310px;\r\n  border: 1px solid #2c39b5;\r\n  background: #fff;\r\n  padding: 30px 20px;\r\n`;\r\nexport const MainMenu = styled.div`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  color: #4b4b4b;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n  text-align: center;\r\n`;\r\nexport const MainMenuList = styled.div`\r\n  width: 130px;\r\n  height: 34px;\r\n  background: #f2f2ff;\r\n  padding-top: 9px;\r\n`;\r\n\r\nexport const SubMenuList = styled.div`\r\n  display: flex;\r\n  margin-left: 20px;\r\n  margin-top: 9px;\r\n  gap: 20px;\r\n  li {\r\n    color: #777;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 16px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  MainMenu,\r\n  MainMenuList,\r\n  MenuTabStyle,\r\n  SubMenuList,\r\n} from \"../../styles/header/MenuTabStyle\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport const mainCate = [\r\n  {\r\n    id: 1,\r\n    title: \"스마트 기기\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"PC / 노트북\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"영상 / 카메라\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"음향\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"게임 기기\",\r\n  },\r\n];\r\n\r\nexport const subCate = [\r\n  [\r\n    { id: 1, title: \"스마트 워치\" },\r\n    { id: 2, title: \"태블릿\" },\r\n    { id: 3, title: \"갤럭시\" },\r\n    { id: 4, title: \"아이폰\" },\r\n  ],\r\n  [\r\n    { id: 1, title: \"노트북\" },\r\n    { id: 2, title: \"PC\" },\r\n    { id: 3, title: \"마우스\" },\r\n    { id: 4, title: \"키보드\" },\r\n  ],\r\n  [\r\n    { id: 1, title: \"빔프로젝터\" },\r\n    { id: 2, title: \"셋톱박스\" },\r\n    { id: 3, title: \"카메라\" },\r\n    { id: 4, title: \"캠코더\" },\r\n    { id: 5, title: \"DSLR\" },\r\n  ],\r\n  [\r\n    { id: 1, title: \"스피커\" },\r\n    { id: 2, title: \"이어폰\" },\r\n    { id: 3, title: \"헤드폰\" },\r\n    { id: 4, title: \"마이크\" },\r\n  ],\r\n  [\r\n    { id: 1, title: \"플레이스테이션\" },\r\n    { id: 2, title: \"닌텐도\" },\r\n    { id: 3, title: \"Wii\" },\r\n    { id: 4, title: \"XBOX\" },\r\n    { id: 5, title: \"기타\" },\r\n  ],\r\n];\r\n\r\nconst MenuTab = () => {\r\n  // hover시 배경색 변경\r\n  const [activeCategory, setActiveCategory] = useState(null);\r\n  const handleCategoryHover = category => {\r\n    setActiveCategory(category); // 마우스가 hover되었음을 상태에 저장\r\n  };\r\n  const handleCategoryLeave = () => {\r\n    setActiveCategory(null); // 마우스가 hover되지 않았음을 상태에 저장\r\n  };\r\n  // 페이지 이동\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <MenuTabStyle>\r\n      {mainCate.map(item => (\r\n        <MainMenu key={item.id}>\r\n          <MainMenuList>{item.title}</MainMenuList>\r\n          <SubMenuList>\r\n            {subCate[item.id - 1]\r\n              .map(listItem => (\r\n                <li\r\n                  key={listItem.id}\r\n                  title={listItem.title}\r\n                  onClick={() => {\r\n                    // navigate(`/more/1/${item.id}/${listItem.id}`,{ state: { title: listItem.title }});\r\n                    navigate(`/more?mc=${item.id}&sc=${listItem.id}&page=1`, {\r\n                      state: { title: listItem.title },\r\n                    });\r\n                    window.location.reload(); // 페이지 이동 후 화면 갱신\r\n                  }}\r\n                  onMouseEnter={() => handleCategoryHover(listItem.title)}\r\n                  onMouseLeave={handleCategoryLeave}\r\n                  style={\r\n                    activeCategory === listItem.title\r\n                      ? { color: \"#2C39B5\", fontWeight: \"500\" }\r\n                      : {}\r\n                  }\r\n                >\r\n                  {listItem.title}\r\n                </li>\r\n              ))}\r\n          </SubMenuList>\r\n        </MainMenu>\r\n      ))}\r\n    </MenuTabStyle>\r\n  );\r\n};\r\nexport default MenuTab;\r\n","import axios from \"axios\";\r\nimport { SERVER_URL } from \"../config\";\r\nimport { jwtAxios } from \"../../util/jwtUtil\";\r\n\r\nexport const searchGet = async ({ sendData, successFn, failFn, errFn }) => {\r\n  try {\r\n    // console.log(\"sendData\", sendData);\r\n    let url = `${SERVER_URL}/api/prod?search=${sendData.search}&page=${sendData.pageNum}`;\r\n    if (sendData.mc) {\r\n      url += `&mc=${sendData.mc}`;\r\n    }if (sendData.sc) {\r\n      url += `&sc=${sendData.sc}`;\r\n    }\r\n    \r\n    const res = await jwtAxios.get(url);\r\n    const resStatus = res.status.toString();\r\n\r\n    if (resStatus.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(res.data);\r\n    }\r\n  } catch (error) {\r\n    errFn(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  CateHover,\r\n  CategoryTab,\r\n  HeaderLogo,\r\n  HeaderMainMenu,\r\n  HeaderMenu,\r\n  HeaderStyle,\r\n  HeaderTop,\r\n  LoginState,\r\n  MainCate,\r\n  MainCateTitle,\r\n  SearchBt,\r\n  SearchDiv,\r\n  SearchDivisionLine,\r\n  SearchForm,\r\n  SearchWord,\r\n  SubCate,\r\n} from \"../../styles/header/HeaderStyle\";\r\nimport { DivisionLine } from \"../../styles/login/LoginPageStyle\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../slices/loginSlice\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport MenuTab, { mainCate, subCate } from \"./MenuTab\";\r\nimport { searchGet } from \"../../api/header/header_api\";\r\n\r\nconst Header = ({ searchName, pageNum }) => {\r\n  // 검색 데이터 연동\r\n  const [isHovered, setIsHovered] = useState(true);\r\n  const [isCateHoverVisible, setIsCateHoverVisible] = useState(false);\r\n  const [isSearchWord, setIsSearchWord] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mc, setMc] = useState(\"\");\r\n  const [sc, setSc] = useState(\"\");\r\n  const searchWordRef = useRef(null);\r\n  const searchBtRef = useRef(null);\r\n\r\n  const handleChangeSearch = e => {\r\n    setSearch(e.target.value);\r\n  };\r\n  const onClickSearch = e => {\r\n    e.preventDefault();\r\n    // console.log(\"검색실행\", search);\r\n    sessionStorage.setItem(\"searchValue\", search);\r\n    const sendData = {\r\n      search: search,\r\n      mc: mc,\r\n      sc: sc,\r\n      pageNum: 1,\r\n    };\r\n    searchGet({ sendData, successFn, failFn, errFn });\r\n  };\r\n  const handleKeyDown = e => {\r\n    // 키 다운 이벤트 처리 함수\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      searchBtRef.current.click(); // SearchBt 클릭 이벤트 호출\r\n    }\r\n  };\r\n  const successFn = result => {\r\n    // console.log(\"검색 성공\", result);\r\n    const searchValue = sessionStorage.getItem(\"searchValue\");\r\n\r\n    let url = `/search?search=${search}`;\r\n    if (mc) {\r\n      url += `&mc=${mc}`;\r\n    }\r\n    if (sc) {\r\n      url += `&sc=${sc}`;\r\n    }\r\n    navigate(url, { state: { result, searchValue } });\r\n    window.location.reload();\r\n  };\r\n\r\n  const failFn = result => {\r\n    console.log(\"검색 오류\", result);\r\n  };\r\n\r\n  const errFn = result => {\r\n    console.log(\"검색 서버에러\", result);\r\n  };\r\n\r\n  // 검색 카테고리 선택\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n  const [selectedSubCate, setSelectedSubCate] = useState([\r\n    { id: 0, title: \"전체\" },\r\n  ]);\r\n  const handleMainCategoryChange = event => {\r\n    const selectedOption = mainCate.find(\r\n      item => item.id === parseInt(event.target.value),\r\n    );\r\n    setSelectedValue(selectedOption ? selectedOption.title : \"\");\r\n    setMc(selectedOption ? selectedOption.id : \"\");\r\n    const selectedMainCategoryId = parseInt(event.target.value);\r\n    const selectedMainCategory = mainCate.find(\r\n      item => item.id === selectedMainCategoryId,\r\n    );\r\n\r\n    if (selectedMainCategory) {\r\n      const selectedSubCategoryId = selectedMainCategoryId - 1;\r\n      const selectedSubCategory = subCate[selectedSubCategoryId];\r\n\r\n      setSelectedSubCate(selectedSubCategory);\r\n    }\r\n  };\r\n\r\n  const [selectedSubValue, setSelectedSubValue] = useState(\"\");\r\n  const handleSubCategoryChange = event => {\r\n    const selectedOption = selectedSubCate.find(\r\n      item => item.title === event.target.value,\r\n    );\r\n    setSelectedSubValue(selectedOption ? selectedOption.title : \"\");\r\n    setSc(selectedOption ? selectedOption.id : \"\");\r\n  };\r\n\r\n  const handleSearchDivClick = () => {\r\n    setIsCateHoverVisible(!isCateHoverVisible);\r\n    setIsSearchWord(false);\r\n  };\r\n\r\n  const handleClickOutsideCateHover = e => {\r\n    if (isCateHoverVisible && e.target.closest(\".header-search\") === null) {\r\n      setIsCateHoverVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleSearchWordClick = () => {\r\n    setIsSearchWord(!isSearchWord);\r\n    setIsCateHoverVisible(false);\r\n  };\r\n\r\n  const handleClickOutsideSearchWord = e => {\r\n    if (isSearchWord && e.target.closest(\".header-search\") === null) {\r\n      setIsSearchWord(false);\r\n    }\r\n  };\r\n\r\n  // 페이지 이동\r\n  const navigate = useNavigate();\r\n  const handleLogo = () => {\r\n    navigate(`/`);\r\n  };\r\n  const handleLogin = () => {\r\n    navigate(`/login`);\r\n  };\r\n  const handleJoin = () => {\r\n    navigate(`/join/step_1`);\r\n  };\r\n  const handleMy = subItem => {\r\n    sessionStorage.setItem(\"selectedItem\", subItem);\r\n  };\r\n\r\n  // 스크롤 시 그림자 생성\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n\r\n  const updateScroll = () => {\r\n    setScrollPosition(window.scrollY || document.documentElement.scrollTop);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutsideSearchWord);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutsideSearchWord);\r\n    };\r\n  }, [isSearchWord]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutsideCateHover);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutsideCateHover);\r\n    };\r\n  }, [isCateHoverVisible]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", updateScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", updateScroll);\r\n    };\r\n  }, []);\r\n\r\n  // 메뉴 click시 메뉴창 나오기\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const inSectionMenu = useRef();\r\n  const toggleMenu = () => {\r\n    setMenuVisible(prev => !prev);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const clickMenuOutside = e => {\r\n      if (menuVisible && !inSectionMenu.current.contains(e.target)) {\r\n        setMenuVisible(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", clickMenuOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", clickMenuOutside);\r\n    };\r\n  }, [menuVisible]);\r\n\r\n  // 카테고리 hover시 메뉴창 나오기\r\n  const [activeCategory, setActiveCategory] = useState(null);\r\n  const handleCategoryHover = category => {\r\n    setActiveCategory(category); // 마우스가 hover되었음을 상태에 저장\r\n  };\r\n  const handleCategoryLeave = () => {\r\n    setActiveCategory(null); // 마우스가 hover되지 않았음을 상태에 저장\r\n  };\r\n\r\n  // 서브카테 hover시 색상 변경\r\n  const [activeSubCate, setActiveSubCate] = useState(null);\r\n  const handleSubCateHover = category => {\r\n    setActiveSubCate(category);\r\n  };\r\n  const handleSubCateLeave = () => {\r\n    setActiveSubCate(null);\r\n  };\r\n\r\n  // 로그인 & 로그아웃\r\n  const loginState = useSelector(state => state.loginSlice);\r\n  // console.log(loginState);\r\n  const { moveToPath, isLogin, doLogout, userAuth } = useCustomLogin();\r\n  // console.log(userAuth)\r\n\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    doLogout();\r\n    moveToPath(\"/\");\r\n  };\r\n\r\n  return (\r\n    <HeaderStyle\r\n      style={\r\n        scrollPosition < 30\r\n          ? { boxShadow: `none` }\r\n          : { boxShadow: `0px 2px 5px 0px rgba(0, 0, 0, 0.25)` }\r\n      }\r\n    >\r\n      <HeaderTop>\r\n        <HeaderLogo src=\"/images/logo.svg\" onClick={handleLogo} />\r\n        <div className=\"header-search\">\r\n          <SearchForm>\r\n            <SearchWord\r\n              ref={searchWordRef}\r\n              onChange={e => handleChangeSearch(e)}\r\n              onKeyDown={handleKeyDown}\r\n              type=\"text\"\r\n              placeholder={\"검색어를 입력해주세요.\"}\r\n              min={2}\r\n              value={search}\r\n              onMouseEnter={() => setIsHovered(false)}\r\n              onMouseLeave={() => setIsHovered(true)}\r\n              onClick={handleSearchWordClick}\r\n              style={{\r\n                backgroundColor: isSearchWord ? \"#FFF\" : \"\",\r\n                borderRadius: isSearchWord ? \"45px\" : \"\",\r\n                boxShadow: isSearchWord\r\n                  ? \"4px 0px 8px 0px rgba(0, 0, 0, 0.25)\"\r\n                  : \"\",\r\n              }}\r\n            />\r\n            {isHovered && !isSearchWord && (\r\n              <SearchDivisionLine></SearchDivisionLine>\r\n            )}\r\n            <SearchDiv\r\n              onMouseEnter={() => setIsHovered(false)}\r\n              onMouseLeave={() => setIsHovered(true)}\r\n              onClick={handleSearchDivClick}\r\n              style={{\r\n                backgroundColor: isCateHoverVisible ? \"#FFF\" : \"\",\r\n                borderRadius: isCateHoverVisible ? \"45px\" : \"\",\r\n                boxShadow: isCateHoverVisible\r\n                  ? \"-4px 0px 8px 0px rgba(0, 0, 0, 0.25)\"\r\n                  : \"\",\r\n              }}\r\n            >\r\n              <b>카테고리</b>\r\n              <div>\r\n                <span>{selectedValue ? selectedValue : \"메인 카테고리\"}</span>\r\n                <p></p>\r\n                <span>\r\n                  {selectedSubValue ? selectedSubValue : \"상세 카테고리\"}\r\n                </span>\r\n              </div>\r\n            </SearchDiv>\r\n            {isCateHoverVisible && (\r\n              <CateHover>\r\n                <div>\r\n                  <h1>메인 카테고리</h1>\r\n                  <select onChange={handleMainCategoryChange} defaultValue=\"\">\r\n                    <option value=\"\" disabled hidden>\r\n                      전체\r\n                    </option>\r\n                    {mainCate.map(item => {\r\n                      return (\r\n                        <option key={item.id} value={item.id}>\r\n                          {item.title}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <h1>상세 카테고리</h1>\r\n                  <select onChange={handleSubCategoryChange} defaultValue=\"\">\r\n                    <option value=\"\" disabled hidden>\r\n                      전체\r\n                    </option>\r\n                    {selectedSubCate.map(listItem => {\r\n                      return (\r\n                        <option key={listItem.id}>{listItem.title}</option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              </CateHover>\r\n            )}\r\n            <SearchBt\r\n              ref={searchBtRef}\r\n              onClick={e => onClickSearch(e)}\r\n              type=\"button\"\r\n            />\r\n          </SearchForm>\r\n        </div>\r\n        {isLogin ? (\r\n          <LoginState>\r\n            <button onClick={handleLogout}>로그아웃</button>\r\n            <DivisionLine></DivisionLine>\r\n            {userAuth == 1 ? (\r\n              <Link\r\n                to=\"/my\"\r\n                onClick={() => {\r\n                  handleMy(\"대여중\");\r\n                }}\r\n              >\r\n                <button>마이페이지</button>\r\n              </Link>\r\n            ) : (\r\n              <Link\r\n                to=\"/admin\"\r\n                // onClick={() => {\r\n                //   handleMy(\"대여중\");\r\n                // }}\r\n              >\r\n                <button>관리자페이지</button>\r\n              </Link>\r\n            )}\r\n          </LoginState>\r\n        ) : (\r\n          <LoginState>\r\n            <button onClick={handleLogin}>로그인</button>\r\n            <DivisionLine></DivisionLine>\r\n            <button onClick={handleJoin}>회원가입</button>\r\n          </LoginState>\r\n        )}\r\n      </HeaderTop>\r\n      <HeaderMenu>\r\n        <HeaderMainMenu ref={inSectionMenu}>\r\n          {menuVisible === true ? (\r\n            <img src=\"/images/header/bt_cancel.svg\" onClick={toggleMenu} />\r\n          ) : (\r\n            <img src=\"/images/header/bt_menu.svg\" onClick={toggleMenu} />\r\n          )}\r\n          {menuVisible && <MenuTab></MenuTab>}\r\n        </HeaderMainMenu>\r\n\r\n        <CategoryTab>\r\n          {mainCate.map(item => (\r\n            <MainCate\r\n              key={item.title}\r\n              onMouseEnter={() => handleCategoryHover(item.title)}\r\n              onMouseLeave={() => handleCategoryLeave(item.title)}\r\n              className={activeCategory === item.title ? \"active\" : \"\"}\r\n            >\r\n              <MainCateTitle\r\n                style={\r\n                  activeCategory === item.title\r\n                    ? {\r\n                        color: \"#2C39B5\",\r\n                        fontWeight: \"500\",\r\n                        fontSize: \"13px\",\r\n                      }\r\n                    : { color: \"#777\" }\r\n                }\r\n              >\r\n                {item.title}\r\n              </MainCateTitle>\r\n              {activeCategory === item.title && (\r\n                <SubCate>\r\n                  {subCate[item.id - 1].map(listItem => (\r\n                    <li\r\n                      key={listItem.id}\r\n                      title={listItem.title}\r\n                      onClick={() => {\r\n                        // navigate(`/more/1/${item.id}/${listItem.id}`, {\r\n                        navigate(\r\n                          `/more?mc=${item.id}&sc=${listItem.id}&page=1`,\r\n                          {\r\n                            state: { title: listItem.title },\r\n                          },\r\n                        );\r\n                        window.location.reload(); // 페이지 이동 후 화면 갱신\r\n                      }}\r\n                      onMouseEnter={() => handleSubCateHover(listItem.title)}\r\n                      onMouseLeave={handleSubCateLeave}\r\n                      style={\r\n                        activeSubCate === listItem.title\r\n                          ? {\r\n                              color: \"#2C39B5\",\r\n                              fontWeight: \"500\",\r\n                              background: \"#F2F2FF\",\r\n                            }\r\n                          : {}\r\n                      }\r\n                    >\r\n                      {listItem.title}\r\n                    </li>\r\n                  ))}\r\n                </SubCate>\r\n              )}\r\n            </MainCate>\r\n          ))}\r\n          <div></div>\r\n        </CategoryTab>\r\n      </HeaderMenu>\r\n    </HeaderStyle>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FooterStyle = styled.div`\r\n  width: 100vw;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  border-top: 1px solid #f2f2ff;\r\n`;\r\nexport const FooterTop = styled.div`\r\ntext-align: start;\r\n  width: 1300px;\r\n  margin: 0 auto;\r\n  height: 70px;\r\n  padding-top: 30px;\r\n`;\r\nexport const FooterLogo = styled.img`\r\n  width: 60px;\r\n  height: 50px;\r\n  background-color: transparent;\r\n`;\r\nexport const FooterMain = styled.div`\r\n  width: 1300px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  height: 270px;\r\n\r\n  padding-top: 25px;\r\n  div {\r\n    text-align: start;\r\n  }\r\n  h1 {\r\n    text-align: start;\r\n    color: #777;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n  h2 {\r\n    color: #2c39b5;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: normal;\r\n  }\r\n  img {\r\n    margin-right: 15px;\r\n  }\r\n`;\r\nexport const FooterMainContact = styled.div`\r\n  width: 550px;\r\n`;\r\nexport const FooterMainInfo = styled.div`\r\n  width: 610px;\r\n`;\r\nexport const FooterBottom = styled.div`\r\n  border-top: 1px solid #2c39b5;\r\n  height: 60px;\r\n  span {\r\n    color: #777;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { FooterBottom, FooterLogo, FooterMain, FooterMainContact, FooterMainInfo, FooterStyle, FooterTop } from \"../../styles/footer/FooterStyle\";\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <FooterStyle>\r\n      <FooterTop>\r\n        <FooterLogo src=\"/images/logo.svg\" />\r\n        {/* <FooterLogo>로고</FooterLogo> */}\r\n      </FooterTop>\r\n      <FooterMain>\r\n        <FooterMainContact>\r\n          <h1>상호:Billy</h1>\r\n          <h1>팀장:박준서,한상원</h1>\r\n          <br />\r\n          <h1>깃 주소:</h1>\r\n          <h1>https://github.com/계정명/프로젝트명</h1>\r\n          <br />\r\n          <br />\r\n          <h1>전화번호 : 0507-1414-1018</h1>\r\n          <h1>팀장 이메일 : 0000@gmail.com & 0000@gmail.com</h1>\r\n          <br />\r\n          <br />\r\n          <h1>주소 : 대구 중구 중앙대로 394 제일빌딩 5F </h1>\r\n        </FooterMainContact>\r\n        <FooterMainInfo>\r\n          <h2>COMPANY</h2>\r\n          <br />\r\n          <br />\r\n          <h1>회사소개 이용약관 개인정보처리방침 제휴문의 고객센터</h1>\r\n          <br />\r\n          <br />\r\n          <h2>INTRODUCE</h2>\r\n          <br />\r\n          <br />\r\n          <h1>FRONT-END 박준서 김경민 박소연 사공은진 최배근</h1>\r\n          <br />\r\n          <br />\r\n          <h1>BACK-END 한상원 김현빈 김현일 조현민</h1>\r\n        </FooterMainInfo>\r\n        <div>\r\n          <h2>SOCIAL</h2>\r\n          <br />\r\n          <br />\r\n          <img src=\"/images/footer/gitHub.svg\" />\r\n          <img src=\"/images/footer/notion.svg\" />\r\n          <img src=\"/images/footer/figma.svg\" />\r\n        </div>\r\n      </FooterMain>\r\n      <FooterBottom>\r\n        <span>Copyright © 회사명 Inc. all rights reserved. </span>\r\n      </FooterBottom>\r\n    </FooterStyle>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\n// import { EventSourcePolyfill } from 'event-source-polyfill';\r\n// import { SERVER_URL } from '../../api/config';\r\n// import { getCookie } from '../../util/cookieUtil';\r\n// import { ModalBackground } from '../joinpopup/JoinPopUp';\r\n// import FetchSSEModal from './FetchSSEModal';\r\n\r\nconst FetchSSE = () => {\r\n\r\n//   const path2 = `${SERVER_URL}/api`;\r\n//   const url = `${path2}/sse/connect`;\r\n//   const memberInfo = getCookie(\"member\");\r\n//   const authToken = memberInfo ? memberInfo.accessToken : 'your_default_token';\r\n//   const [ticket, setTicket] = useState([]);\r\n//   const [closeModal, setCloseModal] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const eventSource = new EventSourcePolyfill(url, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${authToken}`,\r\n//         Accept: `text/event-stream`,\r\n//       },\r\n//     });\r\n\r\n//     // SSE 엔드포인트에서 데이터 수신을 처리하는 이벤트 리스너\r\n//     eventSource.onmessage = (event) => {\r\n//       const data = JSON.parse(event.data);\r\n//       console.log('Received data:', data);\r\n//       // setTicket(JSON.stringify(data));\r\n//     };\r\n\r\n//     // SSE 오류를 처리하는 이벤트 리스너\r\n//     eventSource.addEventListener('error', (error) => {\r\n//       console.error('SSE Error:', error);\r\n//     });\r\n\r\n//     // 정리: 컴포넌트가 언마운트될 때 EventSource 연결 닫기\r\n//     return () => {\r\n//       eventSource.close();\r\n//     };\r\n//   }, [url, authToken]);\r\n\r\n//   const handleConfirm = async () => {\r\n//     setCloseModal(false);\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//     {ticket && closeModal && (\r\n//       <>\r\n//        <FetchSSEModal onConfirm={handleConfirm}/>\r\n//        <ModalBackground></ModalBackground>\r\n//       </>\r\n//     )}\r\n//   </div>\r\n//   );\r\n\r\n\r\n};\r\n\r\nexport default FetchSSE;\r\n","import React from \"react\";\r\nimport Header from \"../components/header/Header\";\r\nimport Footer from \"../components/footer/Footer\";\r\nimport FetchSSE from \"../components/SSE/fetchSSE\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <FetchSSE />\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <div style={{ position: 'absolute', top: '250px', left: '0', width: '100%' }}>\r\n      <main>{children}</main>\r\n      <footer>\r\n        <Footer />\r\n      </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styled from \"@emotion/styled\";\r\n// 헤더\r\nexport const HeaderStyle = styled.div`\r\n  position: fixed;\r\n  z-index: 100;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #fff;\r\n  width: 100vw;\r\n  text-align: center;\r\n  padding-bottom: 15px;\r\n  height: 155px;\r\n`;\r\nexport const HeaderTop = styled.div`\r\n  margin: 30px auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 1300px;\r\n`;\r\nexport const HeaderLogo = styled.img`\r\n  width: 90px;\r\n  height: 60px;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n`;\r\nexport const SearchForm = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  width: 640px;\r\n  height: 60px;\r\n  align-items: center;\r\n  border-radius: 80px;\r\n  border: 1px solid #2c39b5;\r\n  input {\r\n    width: 350px;\r\n    height: 58px;\r\n    padding-left: 20px;\r\n  }\r\n  input:hover {\r\n    width: 350px;\r\n    background-color: #eee;\r\n    border-radius: 45px;\r\n  }\r\n  select {\r\n    width: 120px;\r\n    height: 22px;\r\n    font-size: 12px;\r\n    border: 1px solid #2c39b5;\r\n  }\r\n`;\r\n\r\nexport const SearchDiv = styled.div`\r\n    width: 290px;\r\n    height: 58px;\r\n    :hover {\r\n      background-color: #eee;\r\n      border-radius: 45px;\r\n    }\r\n    b {\r\n    display: flex;\r\n    height: 50%;\r\n    font-size: 16px;\r\n    color: #777;\r\n    font-weight: 400;\r\n    padding-top: 10px;\r\n    padding-left: 25px;\r\n    }\r\n    >div {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 5px;\r\n      height: 50%;\r\n      padding-left: 25px;\r\n      p {\r\n        display: block;\r\n        content: \"\";\r\n        width: 1px;\r\n        height: 10px;\r\n        background: #2c39b5;\r\n      }\r\n      span {\r\n        line-height: 1.6;\r\n        font-size: 12px;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n`\r\n\r\nexport const SearchWord = styled.input`\r\n  display: flex;\r\n  width: 350px;\r\n  height: 60px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  flex-shrink: 0;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: rgb(0, 0, 0);\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  line-height: 24px; /* 80% */\r\n  letter-spacing: 0.5px;\r\n`;\r\nexport const SearchDivisionLine = styled.div`\r\nwidth: 1px;\r\nheight: 26px;\r\nbackground: #eee;\r\n`;\r\nexport const SearchBt = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 100%;\r\n  flex-shrink: 0;\r\n  border: none;\r\n  background-image: url(\"/images/header/bt_search.svg\");\r\n  cursor: pointer;\r\n`;\r\nexport const LoginState = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 200px;\r\n  height: 20px;\r\n  justify-content: space-between;\r\n  button {\r\n    width: 80px;\r\n    background: transparent;\r\n    border: none;\r\n    color: #777;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 16px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const HeaderMenu = styled.div`\r\n  margin: 0 auto;\r\n  width: 1300px;\r\n  display: flex;\r\n  gap: 40px;\r\n  ul {\r\n    gap: 40px;\r\n    display: flex;\r\n    list-style: none;\r\n  }\r\n  li {\r\n    color: #4b4b4b;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 16px;\r\n  }\r\n`;\r\nexport const HeaderMainMenu = styled.div`\r\n  display: block;\r\n  width: 35px;\r\n  height: 35px;\r\n  img {\r\n    padding: 7px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n// 카테고리 메뉴창\r\nexport const CategoryTab = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n`;\r\nexport const MainCate = styled.div`\r\n  width: 100px;\r\n`;\r\nexport const MainCateTitle = styled.li`\r\n  height: 30px;\r\n  width: 85px;\r\n  margin: 0 auto 5px;\r\n  padding-top: 6px;\r\n  cursor: pointer;\r\n`;\r\nexport const SubCate = styled.div`\r\n  display: block;\r\n  border: 1px solid #2c39b5;\r\n  width: 100px;\r\n  padding-top: 10px;\r\n  background: #fff;\r\n  li {\r\n    margin-bottom: 10px;\r\n    padding: 7px 0;\r\n    color: #777;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const CateHover = styled.div`\r\n  display: block;\r\n  position: absolute;\r\n  top: 70px;\r\n  right: 20px;\r\n  border: 1px solid #2c39b5;\r\n  width: 245px;\r\n  height: 90px; \r\n  padding: 15px;\r\n  background: #fff;\r\n  div {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-bottom: 20px;\r\n    h1 {\r\n      font-size: 12px;\r\n      font-weight: 400;\r\n      color: #777;\r\n    }\r\n  }\r\n`\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LoginPageStyle = styled.div`\r\n  width: 1300px;\r\n  /* text-align: center; */\r\n  margin: 0 auto;\r\n  /* background: skyblue; */\r\n  padding-bottom: 120px;\r\n`;\r\nexport const LogoZone = styled.div`\r\nwidth: 100%;\r\ntext-align: center;\r\n`;\r\nexport const Logo = styled.img`\r\n  margin: 0px auto 30px auto;\r\n  width: 80px;\r\n  height: 60px;\r\n  background-color: transparent;\r\n`;\r\nexport const LoginBox = styled.div`\r\n  margin: 0 auto;\r\n  /* box-sizing: border-box; */\r\n  width: 450px;\r\n  height: ${props => (props.height ? props.height : \"540px\")};\r\n  /* height: 540px; */\r\n  border-radius: 10px;\r\n  border: 1px solid #2c39b5;\r\n  padding-left: 30px;\r\n  p {\r\n    margin-top: 50px;\r\n    margin-bottom: ${props => (props.mgbtm ? props.mgbtm : \"160px\")};\r\n\r\n    color: #000;\r\n    font-family: KyivType Sans;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 350;\r\n    line-height: normal;\r\n  }\r\n  li {\r\n    position: relative;\r\n    cursor: pointer;\r\n\r\n    color: #000;\r\n    font-family: KyivType Sans;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n  \r\n`;\r\nexport const IdBox = styled.input`\r\n  width: 390px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  border: 1px solid #2c39b5;\r\n  padding-left: 20px;\r\n\r\n  color: #000;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n\r\n  margin-bottom: 10px;\r\n`;\r\nexport const PwBox = styled(IdBox)`\r\n  margin-bottom: 30px;\r\n`;\r\nexport const LoginBt = styled.button`\r\n  width: 390px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  background: #2c39b5;\r\n  margin-bottom: 20px;\r\n  border: 0;\r\n  color: #fff;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  cursor: pointer;\r\n`;\r\nexport const DivisionLine = styled.div`\r\n  width: 1px;\r\n  height: 15px;\r\n  background: ${props => (props.color ? props.color : \"#2c39b5\")};\r\n`;\r\n","import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./cookieUtil\";\r\nimport { SERVER_URL } from \"../api/config\";\r\n\r\nexport const jwtAxios = axios.create();\r\n\r\nconst beforeReq = config => {\r\n  // console.log(\"1. 요청전 전달\", config);\r\n  // console.log(\"2. 쿠키로 토큰가져오기\");\r\n  const memberInfo = getCookie(\"member\");\r\n\r\n  if (!memberInfo) {\r\n    // console.log(\"쿠키 정보 없네요.\");\r\n    return Promise.reject({ response: { data: { error: \"Login하세요.\" } } });\r\n  }\r\n  // console.log(\"3. 쿠키에서 토큰 정보를 뜯는다.\");\r\n  const { accessToken } = memberInfo;\r\n  // console.log(\"4. 엑세스토큰 정보\", accessToken);\r\n  config.headers.Authorization = `Bearer ${accessToken}`;\r\n  return config;\r\n};\r\n\r\nconst requestFail = error => {\r\n  // console.log(\"요청후 실패시\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst refreshJWT = async (accessToken, refreshToken) => {\r\n  const host = SERVER_URL;\r\n  const header = { headers: { Authorization: `Bearer ${accessToken}` } };\r\n  const res = await axios.get(\r\n    `${host}/api/user/refresh-token?refreshToken=${refreshToken}`,\r\n    header,\r\n  );\r\n  // console.log(\"1. refreshToken 토큰 요청\");\r\n  // console.log(\"2. 백엔드에서 새로 준 값\", res.data);\r\n  return res.data;\r\n};\r\n\r\nconst beforeRes = async res => {\r\n  // console.log(\"Response 전처리\", res);\r\n  const data = res.data;\r\n  // console.log(\"1. Response 오기전 서버 전달해준 데이터, data\");\r\n  if (data && data.error === \"ERROR_ACCESS_TOKEN\") {\r\n    // console.log(\"2. 일반적 오류가 아닌 엑세스 토큰 에러입니다.\");\r\n    // console.log(\"3. 새로운 토큰을 요청해야 합니다.\");\r\n    // console.log(\"4. 쿠키에 있는 정보를 읽어서 다시 시도합니다.\");\r\n    const memberInfo = getCookie(\"member\");\r\n    // console.log(\"5. 쿠키 토큰 정보 AccessToken\", memberInfo.accessToken);\r\n    // console.log(\"6. 쿠키 토큰 정보 RefreshToken\", memberInfo.refreshToken);\r\n    // console.log(\"7. 위의 정보로 새로운 토큰을 요청합니다.\");\r\n    const result = await refreshJWT(\r\n      memberInfo.accessToken,\r\n      memberInfo.refreshToken,\r\n    );\r\n    // console.log(\"8. 요청 이후 되돌아와서 새로운 정보로 쿠키를 업데이트\");\r\n    (memberInfo.accessToken = result.accessToken),\r\n      (memberInfo.refreshToken = result.refreshToken),\r\n      setCookie(\"member\", JSON.stringify(memberInfo));\r\n\r\n    // console.log(\"9. 데이터 요청하던 API 재요청\");\r\n    const originalRequest = res.config;\r\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`;\r\n    return await axios(originalRequest);\r\n  }\r\n  return res;\r\n};\r\n\r\nconst responseFail = error => {\r\n  // console.log(\"Response Fail Err\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\njwtAxios.interceptors.request.use(beforeReq, requestFail);\r\njwtAxios.interceptors.response.use(beforeRes, responseFail);\r\n"],"names":["useCustomLogin","navigate","useNavigate","dispatch","useDispatch","loginState","useSelector","state","loginSlice","isLogin","sessionStorage","getItem","doLogin","async","loginParam","successFn","failFn","errorFn","_ref","loginPostAsync","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","_jsx","Navigate","to","userAuth","MenuTabStyle","styled","div","_templateObject","_taggedTemplateLiteral","MainMenu","_templateObject2","MainMenuList","_templateObject3","SubMenuList","_templateObject4","mainCate","id","title","subCate","MenuTab","activeCategory","setActiveCategory","useState","handleCategoryLeave","children","map","item","_jsxs","listItem","onClick","concat","window","location","reload","onMouseEnter","handleCategoryHover","category","onMouseLeave","style","color","fontWeight","searchName","pageNum","isHovered","setIsHovered","isCateHoverVisible","setIsCateHoverVisible","isSearchWord","setIsSearchWord","search","setSearch","mc","setMc","sc","setSc","searchWordRef","useRef","searchBtRef","onClickSearch","e","preventDefault","setItem","sendData","errFn","url","SERVER_URL","res","jwtAxios","get","status","toString","charAt","data","error","searchGet","result","searchValue","console","log","selectedValue","setSelectedValue","selectedSubCate","setSelectedSubCate","selectedSubValue","setSelectedSubValue","handleClickOutsideCateHover","target","closest","handleClickOutsideSearchWord","scrollPosition","setScrollPosition","updateScroll","scrollY","document","documentElement","scrollTop","useEffect","addEventListener","removeEventListener","menuVisible","setMenuVisible","inSectionMenu","toggleMenu","prev","clickMenuOutside","current","contains","activeSubCate","setActiveSubCate","handleSubCateLeave","HeaderStyle","boxShadow","HeaderTop","HeaderLogo","src","handleLogo","className","SearchForm","SearchWord","ref","onChange","value","handleChangeSearch","onKeyDown","key","click","type","placeholder","min","handleSearchWordClick","backgroundColor","borderRadius","SearchDivisionLine","SearchDiv","handleSearchDivClick","CateHover","event","selectedOption","find","parseInt","selectedMainCategoryId","selectedSubCategory","defaultValue","disabled","hidden","SearchBt","LoginState","handleLogout","DivisionLine","Link","subItem","handleLogin","handleJoin","HeaderMenu","HeaderMainMenu","CategoryTab","MainCate","MainCateTitle","fontSize","SubCate","handleSubCateHover","background","FooterStyle","FooterTop","FooterLogo","img","FooterMain","FooterMainContact","_templateObject5","FooterMainInfo","_templateObject6","FooterBottom","_templateObject7","Footer","FetchSSE","Header","position","top","left","width","input","button","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","li","_templateObject14","_templateObject15","_templateObject16","LoginPageStyle","LogoZone","Logo","LoginBox","props","height","mgbtm","IdBox","PwBox","LoginBt","axios","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","response","accessToken","headers","Authorization","refreshToken","host","header","refreshJWT","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}